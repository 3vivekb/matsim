- the idea is basically the same as with PDES1, that we try to provide a lookahead.
- But instead of doing it on road level, we do it on zone levels.


- each road needs to be assigned to a zone (based on its location => two passes of road files needed)
- a link can only belong to one zone at a time

- At the beginning: Initialize Zones.
     - This means: All roads which (potentially could) flow into different zones, must periodically schedule self/null messages.
     - This enables each zone to start
     
- The message queue of a zone can only be processed, if
              - a message has arrived from all incoming links to the zone
              - and only those messages can be processed, with a time stamp smaller than the time stamp of the smallest message
                from any incoming link
                
                
- a zone can be assigned to any executor thread. This means there can be more zones than processes. Any zones, which can progress
is just processed. Making more zones than threads/processors probably also leads to less waiting on locks? But on the other hand
it leads to more border links (really?).

- the look ahead increases in a certain way with many zones: normally there is a small look ahead for a big region (containing lots of potential events).
  But with smaller zones, the proportion between lookahead and zones size becomes smaller, so that ???? Is this true?
  
- We can make lots of message queues (one for each zone). Each MessageExcutor can then just do TryLocks and if not successful,
  just continue with the next zone.
  
- Simple divisions of zones at the beginning: Make them vertical. For example find out the x min and x max and then
  make equi-distant zones e.g. 10. and then get started the MessageExecutors to process them.
  
 => find out, if y direction is better than x direction.

- This approach will allow to progress empty zones quickly

- There will always be messages in the system, because of the null messages. So we have to set a maximum time
  for the simulation. As soon as the simulation is empty of real messages, the simulation will get ahead much
  faster anyway.
 
- THINK ABOUT IT:
    - Do we really need the new infrastructure of PDES1 with the EnterRequestMessage etc. Because we could also do it without or not?
    by directly 
    
    - does the inner road have an effect into the same junction, so that it could be processed to late or early? think about
    that also when doing implementation, that we get that also right...
    - 


- Problems:


 
- TODO: 
     - perhaps move arround the zone separators to achieve better lookahead propoerties? 
