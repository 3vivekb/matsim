Date: 18. Dezember 2008
=======================
1 Iteration with 67000 agents (test 6, 10% Zurich), with EventWriterTXT on, took on
DEQSim: 122 sec.
JavaMobSiM: 423sec.
(on my office computer)

DEQSim without EventProcessing is: 37sec.
Using addional Thread for EventProcessing, DEQSim is reduced to 86sec.
This means, we have reached the maximum throughput for this (as only one handler and no further parallelization possible).


19. Dezember 2008
==================
1 Iteration, 67K run, on Satwal:
DEQSim inklusive exra thread for eventProcessing: 125 sec.
DEQSim inklusive exra thread for eventProcessing + lesser locking/more copying of lists: 100 sec.
(this needs 88sec instead of 86 on office computer)
DEQSim events turned off: 41sec. 
JavaMobSim: 461sec.

=> experiment: 1 million synchronized cost arround 8.7 seconds on Satawal.
In general it was found, that Satawal is much more sensitive to locking, than my office computer.
office computer = dual core, AMD optron 2.2GHz

memory at same place in simulation:
office computer: 
used RAM: 881376096B = 860718kB = 840MB  free: 184108192B = 175MB  total: 1065484288B = 1016MB
satwal:
used RAM: 1061712368B = 1036828kB = 1012MB  free: 367889936B = 350MB  total: 1429602304B = 1363MB
=> probably because satawal uses 64bit JVM.


22. Dezember 2008
==================
Using the class: tryouts.performance.EventProcessing (using 1 million iterations), the following was found out on the office computer:
- the normal Events class needs 17.282 seconds for 2 Handlers (and one thread).
- with ParallelEvents class, 10.438 seconds are needed (two Handlers, two Thread)
- 14.751 seconds, 3 threads, 3 handlers
- 18.063 seconds, 2 threads, 3 handlers
- 19.095 seconds, 2 threads, 4 handlers
- 19.079 seconds, 4 threads, 4 handlers 
- 32.892 seconds, 1 threads, 4 handlers



23. Januar 2008
===============
Using the updated class: tryouts.performance.EventProcessing on satawal.
configuration: 100 (with sinus and list operations) iterations each handling of event, 
1 million events, 8 handler

- old events handler: 109.452 s
- new events handler, 1 cpu: 110.894 s
- new events handler, 2 cpu: 56.145 s
- new events handler, 4 cpu: 33.652
- new events handler, 8 cpu: 29.552
- new events handler, 16 cpu: cpus not available on satawal currently


Another measurement: assign one handler to each cpu and run it. It should be the same all the time, but 
it is not. This shows the scalling factor.
- old events handler, 1 handler, 1 cpu: 14.878 s
- old events handler, 2 handler, 1 cpu: 27.328 s
- old events handler, 3 handler, 1 cpu: 41.695 s
- old events handler, 4 handler, 1 cpu: 54.625 s

- new events handler, 1 handler, 1 cpu: 16.934 s
- new events handler, 2 handler, 2 cpu: 16.636 s
- new events handler, 4 handler, 4 cpu: 21.888 s
- new events handler, 8 handler, 8 cpu: 25.621 s
- new events handler, 12 handler, 12 cpu: 33.487 s
(do this measurement again, satawal is free, because these measurements are not really good)

26.01.2008
===========
- Satawal, almost empty, only one or two cpus were used.
- old events handler, 1 handler, 1 cpu: 13.874 s
- old events handler, 2 handler, 1 cpu: 27.327 s
- old events handler, 4 handler, 1 cpu: 53.926 s
- old events handler, 8 handler, 1 cpu: 106.158 s
- old events handler, 16 handler, 1 cpu: 209.868 s

- new events handler, 1 handler, 2 cpu: 19.038 s
- new events handler, 2 handler, 2 cpu: 15.711 s
- new events handler, 4 handler, 2 cpu: 29.521 s
- new events handler, 8 handler, 2 cpu: 56.757 s
- new events handler, 16 handler, 2 cpu: 110.35 s

- new events handler, 1 handler, 4 cpu: 18.699 s
- new events handler, 2 handler, 4 cpu: 16.108 s
- new events handler, 4 handler, 4 cpu: 17.067 s
- new events handler, 8 handler, 4 cpu: 30.604 s
- new events handler, 16 handler, 4 cpu: 60.605 s

- new events handler, 1 handler, 8 cpu: 16.319 s
- new events handler, 2 handler, 8 cpu: 16.389 s
- new events handler, 4 handler, 8 cpu: 17.227 s
- new events handler, 8 handler, 8 cpu: 20.577 s
- new events handler, 16 handler, 8 cpu: 42.968 s

- new events handler, 1 handler, 16 cpu: 16.329 s
- new events handler, 2 handler, 16 cpu: 16.932 s
- new events handler, 4 handler, 16 cpu: 18.182 s
- new events handler, 8 handler, 16 cpu: 22.973 s
- new events handler, 16 handler, 16 cpu: 38.911 s

note: There are some variations in the results, if we re-run the experiments, which could be because
of different reasons. These variations have been as high as 20%. In this case the least timing was taken,
because this reflects the case most closely, that satawal is really empty.
