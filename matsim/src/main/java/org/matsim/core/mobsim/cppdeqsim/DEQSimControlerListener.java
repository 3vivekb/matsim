/* *********************************************************************** *
 * project: org.matsim.*
 * DEQSimControlerListener.java
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 * copyright       : (C) 2007 by the members listed in the COPYING,        *
 *                   LICENSE and WARRANTY file.                            *
 * email           : info at matsim dot org                                *
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *   See also COPYING, LICENSE and WARRANTY file                           *
 *                                                                         *
 * *********************************************************************** */

package org.matsim.core.mobsim.cppdeqsim;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.log4j.Logger;
import org.matsim.core.controler.events.IterationEndsEvent;
import org.matsim.core.controler.listener.IterationEndsListener;
import org.matsim.core.utils.io.IOUtils;

/**
 * Archives several output files generated by the deqsim at the end of an iteration.
 *
 * @author mrieser
 */
public class DEQSimControlerListener implements IterationEndsListener {

	private static final Logger log = Logger.getLogger(DEQSimControlerListener.class);

	public void notifyIterationEnds(final IterationEndsEvent event) {
		// deqsim writes its own logfile, move this to the iteration directory

		log.info("moving files...");

		File source = new File("deqsim.log"); // this name must not be changed, as it is given so by the deqsim!
		if (source.exists()) {
			File destination = new File(event.getControler().getControlerIO().getIterationFilename(event.getControler().getIteration(), "deqsim.log"));
			if (!IOUtils.renameFile(source, destination)) {
				log.info("WARNING: Could not move deqsim.log to its iteration directory.");
			}
		}

		int parallelCnt = 0;
		source = new File("deqsim.log." + parallelCnt);
		while (source.exists()) {
			File destination = new File(event.getControler().getControlerIO().getIterationFilename(event.getControler().getIteration(), "deqsim.log." + parallelCnt));
			if (!IOUtils.renameFile(source, destination)) {
				log.info("WARNING: Could not move deqsim.log." + parallelCnt + " to its iteration directory.");
			}
			parallelCnt++;
			source = new File("deqsim.log." + parallelCnt);
		}

		source = new File("loads_out.txt");
		if (source.exists()) {
			File destination = new File(event.getControler().getControlerIO().getIterationFilename(event.getControler().getIteration(), "loads_out.txt"));
			try {
				IOUtils.copyFile(source, destination);
			}
			catch(FileNotFoundException e) {
				log.info("WARNING: Could not copy loads_out.txt to its iteration directory.");
			}
			catch(IOException e) {
				log.info("WARNING: Could not copy loads_out.txt to its iteration directory.");
			}

			destination = new File("loads_in.txt");
			if (!IOUtils.renameFile(source, destination)) {
				log.info("WARNING: Could not move loads_out.txt to loads_in.txt.");
			}
		}

		source = new File("linkprocs.txt"); // this name must not be changed, as it is given so by the deqsim!
		if (source.exists()) {
			File destination = new File(event.getControler().getControlerIO().getIterationFilename(event.getControler().getIteration(), "linkprocs.txt"));
			if (!IOUtils.renameFile(source, destination)) {
				log.info("WARNING: Could not move linkprocs.txt to its iteration directory.");
			}
		}
	}

}