/* *********************************************************************** *
 * project: org.matsim.contrib.networkEditor
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 * copyright       : (C) 2010 Daniel Ampuero
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *   See also COPYING, LICENSE and WARRANTY file                           *
 *                                                                         *
 * *********************************************************************** */

package org.matsim.contrib.networkEditor.run;

import javax.swing.JFileChooser;

import org.matsim.contrib.networkEditor.visualizing.NetVisualizerPanel;

/**
 * @author danielmaxx
 */
public class NetworkEditor extends javax.swing.JFrame {

	public NetVisualizerPanel netVisFrame;

	/** Initializes and starts the NetworkEditor */
	public NetworkEditor() {
		initComponents();
		initVis();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton(); // Save Network
		jButton2 = new javax.swing.JButton(); // Save Counts
		jButton3 = new javax.swing.JButton(); // Read Network
		jButton4 = new javax.swing.JButton(); // Read Counts
		jButton5 = new javax.swing.JButton(); // Read OSM
		jButton6 = new javax.swing.JButton(); // Shp-Export
		jButton7 = new javax.swing.JButton(); // Clean Network

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		addComponentListener(new java.awt.event.ComponentAdapter() {
			@Override
			public void componentResized(java.awt.event.ComponentEvent evt) {
				resizeHandler(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 977, Short.MAX_VALUE)
				);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 594, Short.MAX_VALUE)
				);

		jButton1.setText("Save Network");
		jButton1.setEnabled(false);
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Save Counts");
		jButton2.setEnabled(false);
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3.setText("Read Network");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton4.setText("Read Counts");
		jButton4.setEnabled(false);
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton5.setText("Read OSM");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		jButton6.setText("Export as .shp");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton7.setText("Clean Network");
		jButton7.setEnabled(false);
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(92, Short.MAX_VALUE)
						.addComponent(jButton5)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton3)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton4)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton2)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton6)
						.addContainerGap())
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton2)
								.addComponent(jButton1)
								.addComponent(jButton4)
								.addComponent(jButton6)
								.addComponent(jButton7)
								.addComponent(jButton3)
								.addComponent(jButton5))
								.addContainerGap())
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void resizeHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_resizeHandler
		// TODO add your handling code here:
		/*board.setSize(this.getWidth(), this.getHeight()-30);
        board.repaint();*/
	}//GEN-LAST:event_resizeHandler

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// Save Network
		JFileChooser chooser = new JFileChooser();
		chooser.setApproveButtonText("Save");
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			this.netVisFrame.saveNetwork(path);
		}
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// Save Counts
		JFileChooser chooser = new JFileChooser();
		chooser.setApproveButtonText("Save");
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			netVisFrame.saveCounts(path);
		}
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		JFileChooser chooser = new JFileChooser();
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			if(!netVisFrame.loadNetFromFile(path))
				return;
			jButton1.setEnabled(true);
			jButton2.setEnabled(true);
			jButton4.setEnabled(true);
			jButton7.setEnabled(true);
			repaint();
		}
	}//GEN-LAST:event_jButton3ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		JFileChooser chooser = new JFileChooser();
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			netVisFrame.loadCountsFromFile(path);
		}
	}//GEN-LAST:event_jButton4ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		JFileChooser chooser = new JFileChooser();
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			if(!netVisFrame.loadNetFromOSM(path))
				return;
			jButton1.setEnabled(true);
			jButton2.setEnabled(true);
			jButton4.setEnabled(true);
			jButton7.setEnabled(true);
			repaint();
		}
	}//GEN-LAST:event_jButton5ActionPerformed

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
		// Exportar a .shp
		JFileChooser chooser = new JFileChooser();
		chooser.setApproveButtonText("Salvar");
		int state = chooser.showOpenDialog(null);
		String path = "";
		if(state == JFileChooser.APPROVE_OPTION) {
			path = chooser.getSelectedFile().getAbsolutePath();
			this.netVisFrame.saveNetworkAsESRI(path);
		}
	}//GEN-LAST:event_jButton6ActionPerformed

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
		netVisFrame.cleanNetwork();
	}//GEN-LAST:event_jButton7ActionPerformed

	private void initVis() {
		netVisFrame = new NetVisualizerPanel();
		//netVisFrame.setSize(this.getSize().width-20, this.getSize().height-30);
		this.jPanel1.add(netVisFrame);
		//netVisFrame.setVisible(true);
	}


	public static void main(String args[]){
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				NetworkEditor vis = new NetworkEditor();
				vis.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JPanel jPanel1;
	// End of variables declaration//GEN-END:variables

}
