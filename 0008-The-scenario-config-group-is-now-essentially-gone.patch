From 4992e7f4cad6d959804499c47d5dac4550c19c4f Mon Sep 17 00:00:00 2001
From: Kai Nagel <2008@kainagel.org>
Date: Mon, 20 Jul 2015 20:48:31 +0100
Subject: [PATCH 08/16] The scenario config group is now essentially gone.

The class is still there, but only to result in somewhat meaningful error messages if someone has these switches in his or her config group.

The behavior is now resonably consistently that files are read into the containers if the filenames are given, and otherwise not.

Reading the files into their containers does NOT switch on corresponding functionality; that needs to be done separately and often elsewhere (e.g. in the qsim to respect lanes and/or vehicles).

The "refactoring" was not exact but based on heuristics, sometimes only string exchange, sometimes using "if ( filename!=null )" as heuristic to replace the previous test.  This may not always work as intended.
---
 .../evacuation/visualization/OTFClientLiveWMS.java |  3 +-
 .../signals/otfvis/OTFClientLiveWithSignals.java   |  3 +-
 .../contribs/signals/otfvis/OTFVisWithSignals.java  |  3 +-
 .../org/matsim/contrib/signals/router/Utils.java   |  2 +-
 .../data/v11/LaneDefinitonsV11ToV20Converter.java  |  2 +-
 ...reateTrafficSignalScenarioWithLanesExample.java |  2 +-
 .../contribs/signals/TravelTimeFourWaysTest.java    |  2 +-
 .../contribs/signals/TravelTimeOneWayTest.java      |  2 +-
 .../InvertedNetworkRoutingTestFixture.java         |  4 +-
 .../matsim/contrib/signals/oneagent/Fixture.java   |  2 +-
 .../integration/lanes11/MixedLaneTestFixture.java  |  4 +-
 .../data/v11/LaneDefinitionsReaderWriterTest.java  |  2 +-
 .../consistency/ConfigConsistencyCheckerImpl.java  |  7 ++-
 .../matsim/core/config/groups/QSimConfigGroup.java | 13 ++++-
 .../core/config/groups/ScenarioConfigGroup.java    | 55 +++++++++++-----------
 .../mobsim/qsim/qnetsimengine/QNetsimEngine.java   |  2 +-
 .../org/matsim/core/scenario/ScenarioImpl.java     | 10 +++-
 .../matsim/core/scenario/ScenarioLoaderImpl.java   |  4 +-
 .../org/matsim/core/scenario/ScenarioUtils.java    |  6 +++
 .../src/main/java/org/matsim/lanes/LanesUtils.java |  2 +-
 .../mobsim/qsim/pt/TransitQueueSimulationTest.java |  4 +-
 .../core/mobsim/qsim/qnetsimengine/QLaneTest.java  | 12 ++---
 .../mobsim/qsim/qnetsimengine/QLinkLanesTest.java  | 12 ++---
 .../data/v20/LaneDefinitionsReaderWriterTest.java  |  2 +-
 .../zuerich/GenerateZuerrichOutput.java            |  2 +-
 .../playground/balmermi/ConfigurationWriter.java   |  3 +-
 .../otfvis/BkVisLiveFromLastIteration.java         |  2 +-
 .../main/java/playground/cottbus/FourWaysVis.java  |  2 +-
 .../playground/dgrether/DgEquilController.java     |  4 +-
 .../dgrether/DgOTFVisReplayLastIteration.java      |  2 +-
 .../dgrether/analysis/CountsCreator.java           |  8 ++--
 .../dgrether/analysis/RunResultsLoader.java        |  2 +-
 .../daganzosignal/DaganzoScenarioGenerator.java    |  2 +-
 .../DgFigure9ScenarioGenerator.java                |  2 +-
 .../laneLayoutTest/LaneLayoutTestShowLanes.java    |  2 +-
 .../dgrether/signalsystems/PoznanNetwork.java      |  2 +-
 .../signalsystems/cottbus/CottbusUtils.java        |  2 +-
 .../testsinglecrossing/SingleCrossingScenario.java |  2 +-
 .../osm/DgOsmJunctionsPostprocessing.java          |  2 +-
 .../dgrether/signalsystems/otfvis/FourWaysVis.java |  2 +-
 .../signalsystems/otfvis/FourWaysVisMviTest.java   |  2 +-
 .../otfvis/FourWaysVisNetworkOnly.java             |  2 +-
 .../controler/DgSylviaSignalControlerListener.java |  2 +-
 .../signalsystems/utils/DgScenarioUtils.java       |  2 +-
 .../signalsystems/DgCalculateSignalGroupsTest.java |  4 +-
 .../controller/CadytsEquilController.java          | 17 ++++---
 .../ComplexScenarioGenerator.java                  |  9 ++--
 .../scenariogeneratorpt/ScenarioGeneratorPT.java   | 35 ++++++++++----
 .../matsim2urbansim/controler/MyBasicConfig.java   | 15 +++---
 .../controler/SanralControler_base.java            | 13 +++--
 .../scenario/ScenarioLoaderImpl.java               |  2 +-
 .../scenario/ScenarioLoaderImpl.java               |  4 +-
 .../scenario/ScenarioLoaderImpl.java               |  4 +-
 .../braess/createInput/TtCreateBraessSignals.java  |  4 +-
 .../scenarios/braess/run/RunBraessSimulation.java  |  7 +--
 .../src/test/java/lanes/LinkLaneTTTest.java        |  2 +-
 56 files changed, 194 insertions(+), 131 deletions(-)

diff --git a/contribs/evacuation/src/main/java/org/matsim/contrib/evacuation/visualization/OTFClientLiveWMS.java b/contribs/evacuation/src/main/java/org/matsim/contrib/evacuation/visualization/OTFClientLiveWMS.java
index fde052e..b658b5a 100644
--- a/contribs/evacuation/src/main/java/org/matsim/contrib/evacuation/visualization/OTFClientLiveWMS.java
+++ b/contribs/evacuation/src/main/java/org/matsim/contrib/evacuation/visualization/OTFClientLiveWMS.java
@@ -71,7 +71,8 @@ public class OTFClientLiveWMS {
 				connectionManager.connectWriterToReader(OTFAgentsListHandler.Writer.class, OTFAgentsListHandler.class);
 
 
-				if (config.scenario().isUseLanes() && (!(boolean) ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
+				if ( (config.network().getLaneDefinitionsFile()!=null || config.qsim().isUseLanes()) 
+						&& (!(boolean) ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
 					connectionManager.connectWriterToReader(OTFLaneWriter.class, OTFLaneReader.class);
 					connectionManager.connectReaderToReceiver(OTFLaneReader.class, OTFLaneSignalDrawer.class);
 					connectionManager.connectReceiverToLayer(OTFLaneSignalDrawer.class, SimpleSceneLayer.class);
diff --git a/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFClientLiveWithSignals.java b/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFClientLiveWithSignals.java
index ff92425..50c8cd7 100644
--- a/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFClientLiveWithSignals.java
+++ b/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFClientLiveWithSignals.java
@@ -70,7 +70,8 @@ public class OTFClientLiveWithSignals {
 					connectionManager.connectReceiverToLayer(FacilityDrawer.DataDrawer.class, SimpleSceneLayer.class);
 				}
 
-				if (config.scenario().isUseLanes() && (!ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
+				if ( (config.qsim().isUseLanes()) 
+						&& (!ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
 					connectionManager.connectWriterToReader(OTFLaneWriter.class, OTFLaneReader.class);
 					connectionManager.connectReaderToReceiver(OTFLaneReader.class, OTFLaneSignalDrawer.class);
 					connectionManager.connectReceiverToLayer(OTFLaneSignalDrawer.class, SimpleSceneLayer.class);
diff --git a/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFVisWithSignals.java b/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFVisWithSignals.java
index 45e7106..89ffcc3 100644
--- a/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFVisWithSignals.java
+++ b/contribs/signals/src/main/java/org/matsim/contrib/signals/otfvis/OTFVisWithSignals.java
@@ -85,7 +85,8 @@ public class OTFVisWithSignals {
 			server.addAdditionalElement(facilityWriter);
 		}
 
-		if (config.scenario().isUseLanes() && (!(boolean) ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
+		if ( (config.qsim().isUseLanes() || config.network().getLaneDefinitionsFile()!=null ) 
+				&& (!(boolean) ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems())) {
 			ConfigUtils.addOrGetModule(config, OTFVisConfigGroup.GROUP_NAME, OTFVisConfigGroup.class).setScaleQuadTreeRect(true);
 			OTFLaneWriter otfLaneWriter = new OTFLaneWriter(qSim.getVisNetwork(), (LaneDefinitions20) scenario.getScenarioElement(LaneDefinitions20.ELEMENT_NAME), scenario.getConfig());
 			server.addAdditionalElement(otfLaneWriter);
diff --git a/contribs/signals/src/main/java/org/matsim/contrib/signals/router/Utils.java b/contribs/signals/src/main/java/org/matsim/contrib/signals/router/Utils.java
index cc4cdeb..ab7c94a 100644
--- a/contribs/signals/src/main/java/org/matsim/contrib/signals/router/Utils.java
+++ b/contribs/signals/src/main/java/org/matsim/contrib/signals/router/Utils.java
@@ -77,7 +77,7 @@ class Utils {
 		NetworkTurnInfoBuilder netTurnInfoBuilder = new NetworkTurnInfoBuilder();
 		netTurnInfoBuilder.createAndAddTurnInfo(TransportMode.car, allowedInLinkTurnInfoMap, sc.getNetwork() );
 	
-		if (sc.getConfig().scenario().isUseLanes()) {
+		if ( sc.getConfig().network().getLaneDefinitionsFile()!=null || sc.getConfig().qsim().isUseLanes()) {
 			LaneDefinitions20 ld = sc.getLanes();
 			Map<Id<Link>, List<TurnInfo>> lanesTurnInfoMap = createTurnInfos(ld);
 			netTurnInfoBuilder.mergeTurnInfoMaps(allowedInLinkTurnInfoMap, lanesTurnInfoMap);
diff --git a/contribs/signals/src/main/java/org/matsim/lanes/data/v11/LaneDefinitonsV11ToV20Converter.java b/contribs/signals/src/main/java/org/matsim/lanes/data/v11/LaneDefinitonsV11ToV20Converter.java
index 6b49b1f..2a06588 100644
--- a/contribs/signals/src/main/java/org/matsim/lanes/data/v11/LaneDefinitonsV11ToV20Converter.java
+++ b/contribs/signals/src/main/java/org/matsim/lanes/data/v11/LaneDefinitonsV11ToV20Converter.java
@@ -57,7 +57,7 @@ public class LaneDefinitonsV11ToV20Converter {
 	public void convert(String laneDefs11Filename, String laneDefs20Filename, String networkFilename){
 		this.checkFileTypes(laneDefs11Filename, laneDefs20Filename);
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		Scenario sc = ScenarioUtils.createScenario(config);
 		MatsimNetworkReader netReader = new MatsimNetworkReader(sc);
 		netReader.readFile(networkFilename);
diff --git a/contribs/signals/src/main/java/tutorial/trafficsignals/RunCreateTrafficSignalScenarioWithLanesExample.java b/contribs/signals/src/main/java/tutorial/trafficsignals/RunCreateTrafficSignalScenarioWithLanesExample.java
index 66d1081..2868556 100644
--- a/contribs/signals/src/main/java/tutorial/trafficsignals/RunCreateTrafficSignalScenarioWithLanesExample.java
+++ b/contribs/signals/src/main/java/tutorial/trafficsignals/RunCreateTrafficSignalScenarioWithLanesExample.java
@@ -218,7 +218,7 @@ public class RunCreateTrafficSignalScenarioWithLanesExample {
 		Config config = ConfigUtils.createConfig();
 		config.network().setInputFile(inputDir + "network.xml.gz");
 		config.plans().setInputFile(inputDir + "population.xml.gz");
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		config.controler().setMobsim("qsim");
 		config.qsim().setNodeOffset(20.0);
diff --git a/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeFourWaysTest.java b/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeFourWaysTest.java
index 56cbb58..aef5d99 100644
--- a/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeFourWaysTest.java
+++ b/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeFourWaysTest.java
@@ -64,7 +64,7 @@ public class TravelTimeFourWaysTest {
 		String lanes20 = testUtils.getOutputDirectory() + "testLaneDefinitions_v2.0.xml";
 		new LaneDefinitonsV11ToV20Converter().convert(laneDefinitions,lanes20, conf.network().getInputFile());
 		conf.network().setLaneDefinitionsFile(lanes20);
-		conf.scenario().setUseLanes(true);
+		conf.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(conf, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(false);
 		Scenario scenario = ScenarioUtils.createScenario(conf);
 
diff --git a/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeOneWayTest.java b/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeOneWayTest.java
index 7d8a1f0..29a657f 100644
--- a/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeOneWayTest.java
+++ b/contribs/signals/src/test/java/org/matsim/contrib/signals/TravelTimeOneWayTest.java
@@ -74,7 +74,7 @@ public class TravelTimeOneWayTest {
 				String lanes20 = testUtils.getOutputDirectory() + "testLaneDefinitions_v2.0.xml";
 				new LaneDefinitonsV11ToV20Converter().convert(laneDefinitions,lanes20, conf.network().getInputFile());
 				conf.network().setLaneDefinitionsFile(lanes20);
-				conf.scenario().setUseLanes(true);
+				conf.qsim().setUseLanes(true);
 				signalSystemsFile = testUtils.getClassInputDirectory() + "testSignalSystems_v2.0.xml";
 		}
 		else {
diff --git a/contribs/signals/src/test/java/org/matsim/contrib/signals/integration/invertednetworks/InvertedNetworkRoutingTestFixture.java b/contribs/signals/src/test/java/org/matsim/contrib/signals/integration/invertednetworks/InvertedNetworkRoutingTestFixture.java
index 56ab8fe..7124b91 100644
--- a/contribs/signals/src/test/java/org/matsim/contrib/signals/integration/invertednetworks/InvertedNetworkRoutingTestFixture.java
+++ b/contribs/signals/src/test/java/org/matsim/contrib/signals/integration/invertednetworks/InvertedNetworkRoutingTestFixture.java
@@ -95,13 +95,13 @@ public class InvertedNetworkRoutingTestFixture {
 		ActivityParams params = new ActivityParams("home");
 		params.setTypicalDuration(24.0 * 3600.0);
 		config.planCalcScore().addActivityParams(params);
-		config.scenario().setUseLanes(doCreateLanes);
+		config.qsim().setUseLanes(doCreateLanes);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(doCreateSignals);
 
 		this.scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 		createNetwork();
 		if (doCreateLanes){
-			config.scenario().setUseLanes(true);
+			config.qsim().setUseLanes(true);
 			createLanes();
 		}
 		if (doCreateModes){
diff --git a/contribs/signals/src/test/java/org/matsim/contrib/signals/oneagent/Fixture.java b/contribs/signals/src/test/java/org/matsim/contrib/signals/oneagent/Fixture.java
index 8ce5385..e96446b 100644
--- a/contribs/signals/src/test/java/org/matsim/contrib/signals/oneagent/Fixture.java
+++ b/contribs/signals/src/test/java/org/matsim/contrib/signals/oneagent/Fixture.java
@@ -78,7 +78,7 @@ public class Fixture {
 		new LaneDefinitonsV11ToV20Converter().convert(laneDefinitions,lanes20, conf.network().getInputFile());
 		conf.network().setLaneDefinitionsFile(lanes20);
 		conf.plans().setInputFile(plansFile);
-		conf.scenario().setUseLanes(true);
+		conf.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(conf, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		//as signals are configured below we don't need signals on
 		conf.qsim().setStuckTime(1000);
diff --git a/contribs/signals/src/test/java/org/matsim/integration/lanes11/MixedLaneTestFixture.java b/contribs/signals/src/test/java/org/matsim/integration/lanes11/MixedLaneTestFixture.java
index 5c8efb2..4f65fb6 100644
--- a/contribs/signals/src/test/java/org/matsim/integration/lanes11/MixedLaneTestFixture.java
+++ b/contribs/signals/src/test/java/org/matsim/integration/lanes11/MixedLaneTestFixture.java
@@ -63,7 +63,7 @@ public class MixedLaneTestFixture {
 	
 	public MixedLaneTestFixture(){
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 
 		sc = ScenarioUtils.createScenario(config);
 		id0 = Id.create("0", Link.class);
@@ -88,7 +88,7 @@ public class MixedLaneTestFixture {
 
 	public MixedLaneTestFixture(double timeStepSize){
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 
 		config.qsim().setTimeStepSize(timeStepSize);
 
diff --git a/contribs/signals/src/test/java/org/matsim/lanes/data/v11/LaneDefinitionsReaderWriterTest.java b/contribs/signals/src/test/java/org/matsim/lanes/data/v11/LaneDefinitionsReaderWriterTest.java
index 3a82c0b..bed8a49 100644
--- a/contribs/signals/src/test/java/org/matsim/lanes/data/v11/LaneDefinitionsReaderWriterTest.java
+++ b/contribs/signals/src/test/java/org/matsim/lanes/data/v11/LaneDefinitionsReaderWriterTest.java
@@ -61,7 +61,7 @@ public class LaneDefinitionsReaderWriterTest extends MatsimTestCase {
 
 		Fixture(){
 			Config config = ConfigUtils.createConfig();
-			config.scenario().setUseLanes(true);
+			config.qsim().setUseLanes(true);
 			// need to LOAD the scenario in order for the lanes container to be created.
 			this.scenario = ScenarioUtils.loadScenario(config);
 		}
diff --git a/matsim/src/main/java/org/matsim/core/config/consistency/ConfigConsistencyCheckerImpl.java b/matsim/src/main/java/org/matsim/core/config/consistency/ConfigConsistencyCheckerImpl.java
index 237af14..d47c0a4 100644
--- a/matsim/src/main/java/org/matsim/core/config/consistency/ConfigConsistencyCheckerImpl.java
+++ b/matsim/src/main/java/org/matsim/core/config/consistency/ConfigConsistencyCheckerImpl.java
@@ -110,10 +110,9 @@ public final class ConfigConsistencyCheckerImpl implements ConfigConsistencyChec
 	}
 
 	private void checkEventsFormatLanesSignals(final Config c) {
-		ScenarioConfigGroup scg = c.scenario();
-		if (scg.isUseLanes()) {
+		if (c.qsim().isUseLanes()) {
 			if (!c.controler().getEventsFileFormats().contains(EventsFileFormat.xml)){
-				log.error("Xml events are not enabled, but lanes and eventually signal systems" +
+				log.error("Xml events are not enabled, but lanes and possibly signal systems" +
 						"are enalbed. Events from this features will only be written to the xml format, consider" +
 						"to add xml events in the controler config module");
 			}
@@ -161,7 +160,7 @@ public final class ConfigConsistencyCheckerImpl implements ConfigConsistencyChec
 
 
 	private void checkLaneDefinitionRoutingConfiguration(final Config config) {
-		if ((config.scenario().isUseLanes()) &&
+		if ((config.qsim().isUseLanes()) &&
 		    !config.controler().isLinkToLinkRoutingEnabled()){
 		  	log.warn("Using lanes without enabling linktolinkrouting might not lead to expected simulation results");
 		   }
diff --git a/matsim/src/main/java/org/matsim/core/config/groups/QSimConfigGroup.java b/matsim/src/main/java/org/matsim/core/config/groups/QSimConfigGroup.java
index 285adf6..22a5ab5 100644
--- a/matsim/src/main/java/org/matsim/core/config/groups/QSimConfigGroup.java
+++ b/matsim/src/main/java/org/matsim/core/config/groups/QSimConfigGroup.java
@@ -232,7 +232,7 @@ public final class QSimConfigGroup extends ReflectiveConfigGroup implements Mobs
 		map.put(FAST_CAPACITY_UPDATE, "normally, the qsim accumulates fractional flows up to one flow unit.  This is impractical with "
 				+ " with smaller PCEs.  If this switch is set to true, cars can enter a link if the accumulated flow is >=0, and the accumulated flow can go "
 				+ "into negative.  Will probably become the default eventually.") ;
-
+		map.put(USE_LANES, "Set this parameter to true if lanes should be used, false if not.");
 		{	
 			StringBuilder stb = new StringBuilder() ;
 			for ( VehiclesSource src : VehiclesSource.values() ) {
@@ -496,4 +496,15 @@ public final class QSimConfigGroup extends ReflectiveConfigGroup implements Mobs
 		this.usingThreadpool = val ;
 	}
 
+	private static final String USE_LANES="useLanes" ;
+	private boolean useLanes = false ;
+	@StringGetter(USE_LANES)
+	public boolean isUseLanes() {
+		return this.useLanes;
+	}
+	@StringSetter(USE_LANES)
+	public void setUseLanes(final boolean useLanes) {
+		this.useLanes = useLanes;
+	}
+
 }
diff --git a/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java b/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
index 0404ba4..23dec80 100644
--- a/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
+++ b/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
@@ -20,15 +20,9 @@
 package org.matsim.core.config.groups;
 
 import java.util.Map;
-import java.util.Set;
 
 import org.apache.log4j.Logger;
-import org.matsim.api.core.v01.Id;
-import org.matsim.api.core.v01.network.Link;
 import org.matsim.core.config.ConfigGroup;
-import org.matsim.core.config.ReflectiveConfigGroup;
-import org.matsim.core.utils.collections.CollectionUtils;
-import org.matsim.core.utils.misc.Time;
 
 /**
  * @author dgrether
@@ -45,8 +39,6 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 	@SuppressWarnings("unused")
 	private static final Logger log = Logger.getLogger( ScenarioConfigGroup.class ) ;
 	
-	private boolean useLanes = false;
-
 	public ScenarioConfigGroup() {
 		super(GROUP_NAME);
 	}
@@ -54,9 +46,14 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 	@Override
 	public Map<String, String> getComments() {
 		Map<String,String> map = super.getComments();
-		map.put(USE_LANES, "Set this parameter to true if lanes should be used, false if not.");
-		map.put(USE_HOUSEHOLDS, "Deprecated, do not use.  The file is loaded when the filename is given.  Functionality needs to be switched on elsewhere.");
+		
+		// I don't think that the following is used anywhere: 
+		final String message = "Deprecated, do not use.  The file is loaded when the filename is given.  Functionality needs to be switched on elsewhere.";
+		map.put(USE_LANES, message) ; // since jul'15
+		map.put(USE_HOUSEHOLDS, message); // since jul'15
+		map.put(USE_VEHICLES, message); // since jul'15
 		map.put(USE_TRANSIT, "Deprecated, do not use.  See transit section of config file.") ; // since jul'15
+		
 		return map;
 	}
 
@@ -85,18 +82,30 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 	@Override
 	public final Map<String, String> getParams() {
 		Map<String, String> params = super.getParams();
-
-		params.put(USE_LANES, Boolean.toString( this.isUseLanes() ) ) ;
-
 		return params;
 	}
 
-	public boolean isUseLanes() {
-		return this.useLanes;
-	}
+	// if they are not in getParams, they will not be included into the config file dump.
+	
+	// if they are, however, in addParam, then the methods will be called (which throw exceptions).
+	
+	// Once the methods below are removed throughout the code, those exceptions can be moved into the addParam method.
+	
+	// Eventually, the whole scenario config group can be moved away.
+	
+	// kai, jul'15
+
+	
+	
 
-	public void setUseLanes(final boolean useLanes) {
-		this.useLanes = useLanes;
+//	public boolean isUseLanes() {
+//		return this.useLanes;
+//	}
+
+	@SuppressWarnings("static-method")
+	@Deprecated // since jul'15
+	void setUseLanes(@SuppressWarnings("unused") final boolean useLanes) {
+		throw new RuntimeException( getMessage( USE_LANES ) ) ;
 	}
 
 //	public boolean isUseHouseholds() {
@@ -109,16 +118,6 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 		throw new RuntimeException( getMessage( USE_HOUSEHOLDS ) ) ;
 	}
 
-	// if they are not in getParams, they will not be included into the config file dump.
-	
-	// if they are, however, in addParam, then the methods will be called (which throw exceptions).
-	
-	// Once the methods below are removed throughout the code, those exceptions can be moved into the addParam method.
-	
-	// kai, jul'15
-
-	
-	
 	@SuppressWarnings("static-method")
 	@Deprecated // since jul'15
 	public void setUseVehicles(@SuppressWarnings("unused") final Boolean b) {
diff --git a/matsim/src/main/java/org/matsim/core/mobsim/qsim/qnetsimengine/QNetsimEngine.java b/matsim/src/main/java/org/matsim/core/mobsim/qsim/qnetsimengine/QNetsimEngine.java
index f8a3644..532bbb6 100644
--- a/matsim/src/main/java/org/matsim/core/mobsim/qsim/qnetsimengine/QNetsimEngine.java
+++ b/matsim/src/main/java/org/matsim/core/mobsim/qsim/qnetsimengine/QNetsimEngine.java
@@ -162,7 +162,7 @@ public class QNetsimEngine implements MobsimEngine {
 
 		// the following is so confused because I can't separate it out, the reason being that ctor calls need to be the 
 		// first in ctors calling each other.  kai, feb'12
-		if (sim.getScenario().getConfig().scenario().isUseLanes()) {
+		if (sim.getScenario().getConfig().qsim().isUseLanes()) {
 			log.info("Lanes enabled...");
 			if ( netsimNetworkFactory != null ) {
 				throw new RuntimeException("both `lanes' and `netsimNetworkFactory' are defined; don't know what that means; aborting") ;
diff --git a/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java b/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
index 507de16..0272d26 100644
--- a/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
+++ b/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
@@ -76,7 +76,7 @@ public final class ScenarioImpl implements Scenario {
 		if (this.config.households().getInputFile()!=null ){
 			this.createHouseholdsContainer();
 		}
-		if (this.config.scenario().isUseLanes()) {
+		if ( this.config.network().getLaneDefinitionsFile()!=null || this.config.qsim().isUseLanes()) {
 			createLanesContainer();
 		}
 		if ( this.config.transit().getTransitScheduleFile() != null || this.config.transit().isUseTransit() ) {
@@ -122,7 +122,10 @@ public final class ScenarioImpl implements Scenario {
 		return true;
 	}
 
-	private final boolean createLanesContainer() {
+	/**
+	 * need this in ScenarioLoader.  If you need it elsewhere, use {@link ScenarioUtils.ScenarioBuilder}.
+	 */
+	final boolean createLanesContainer() {
 		if ( this.lanes != null ) return false ;
 		this.lanes = new LaneDefinitions20Impl();
 		return true ;
@@ -333,5 +336,8 @@ public final class ScenarioImpl implements Scenario {
 	final void setTransitVehicles( Vehicles vehicles ) {
 		this.transitVehicles = vehicles ;
 	}
+	final void setLanes( LaneDefinitions20 lanes ) {
+		this.lanes = lanes ;
+	}
 
 }
diff --git a/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java b/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
index f939316..933db44 100644
--- a/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
+++ b/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
@@ -141,7 +141,7 @@ public class ScenarioLoaderImpl {
 		if (this.config.vehicles().getVehiclesFile()!=null ) {
 			this.loadVehicles() ;
 		}
-		if (this.config.scenario().isUseLanes()) {
+		if (this.config.network().getLaneDefinitionsFile()!=null ) {
 			this.loadLanes();
 		}
 		return this.scenario;
@@ -315,7 +315,7 @@ public class ScenarioLoaderImpl {
 						+ "LaneDefinitonsV11ToV20Converter manually in the preprocessing phase.");
 				throw new UncheckedIOException("Wrong lane file format: " + fileTypeGuesser.getSystemId());
 			}
-
+			this.scenario.createLanesContainer() ;
 			LaneDefinitionsReader reader = new LaneDefinitionsReader(this.scenario);
 			reader.readFile(filename);
 		}
diff --git a/matsim/src/main/java/org/matsim/core/scenario/ScenarioUtils.java b/matsim/src/main/java/org/matsim/core/scenario/ScenarioUtils.java
index 7be4fa3..316e5e9 100644
--- a/matsim/src/main/java/org/matsim/core/scenario/ScenarioUtils.java
+++ b/matsim/src/main/java/org/matsim/core/scenario/ScenarioUtils.java
@@ -6,6 +6,7 @@ import org.matsim.api.core.v01.population.Population;
 import org.matsim.core.config.Config;
 import org.matsim.facilities.ActivityFacilities;
 import org.matsim.households.Households;
+import org.matsim.lanes.data.v20.LaneDefinitions20;
 import org.matsim.pt.transitSchedule.api.TransitSchedule;
 import org.matsim.vehicles.Vehicles;
 
@@ -120,6 +121,11 @@ public class ScenarioUtils {
 			scenario.setActivityFacilities(facilities);
 			return this ;
 		}
+		// lanes:
+		public ScenarioBuilder setLanes( LaneDefinitions20 lanes ) {
+			scenario.setLanes(lanes);
+			return this ;
+		}
 		// final creational method:
 		public Scenario createScenario() {
 			this.scenario.setLocked(); // prevents that one can cast to ScenarioImpl and change the containers again. kai, nov'14
diff --git a/matsim/src/main/java/org/matsim/lanes/LanesUtils.java b/matsim/src/main/java/org/matsim/lanes/LanesUtils.java
index 730288b..36db5ec3 100644
--- a/matsim/src/main/java/org/matsim/lanes/LanesUtils.java
+++ b/matsim/src/main/java/org/matsim/lanes/LanesUtils.java
@@ -198,7 +198,7 @@ public final class LanesUtils {
 	public static void calculateMissingCapacitiesForLanes20(String networkInputFilename, String lanes20InputFilename, String lanes20OutputFilename){
 		Config config = ConfigUtils.createConfig();
 		config.network().setInputFile(networkInputFilename);
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		config.network().setLaneDefinitionsFile(lanes20InputFilename);
 		Scenario scenario = ScenarioUtils.loadScenario(config);
 		Network network = scenario.getNetwork();
diff --git a/matsim/src/test/java/org/matsim/core/mobsim/qsim/pt/TransitQueueSimulationTest.java b/matsim/src/test/java/org/matsim/core/mobsim/qsim/pt/TransitQueueSimulationTest.java
index 4084d06..7c10cc4 100644
--- a/matsim/src/test/java/org/matsim/core/mobsim/qsim/pt/TransitQueueSimulationTest.java
+++ b/matsim/src/test/java/org/matsim/core/mobsim/qsim/pt/TransitQueueSimulationTest.java
@@ -184,11 +184,9 @@ public class TransitQueueSimulationTest {
         }
 
         scenario.getConfig().addModule( new SimulationConfigGroup() );
-        ((SimulationConfigGroup) scenario.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setEndTime(1.0*3600); // prevent running the actual simulation
         scenario.getConfig().qsim().setEndTime(1.0*3600); // prevent running the actual simulation
-        // (the previous line was not there when I found this. kai, dec'11)
 
-        QSim sim = (QSim) QSimUtils.createDefaultQSim(scenario, EventsUtils.createEventsManager());
+        QSim sim = QSimUtils.createDefaultQSim(scenario, EventsUtils.createEventsManager());
         sim.run();
         List<MobsimAgent> agents = new ArrayList<MobsimAgent>(sim.getAgents());
         Collections.sort(agents, new Comparator<MobsimAgent>() {
diff --git a/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLaneTest.java b/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLaneTest.java
index 04da2a4..76f0427 100644
--- a/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLaneTest.java
+++ b/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLaneTest.java
@@ -61,7 +61,7 @@ public class QLaneTest extends MatsimTestCase {
   }
   
 	private LaneDefinitions20 createOneLane(ScenarioImpl scenario, int numberOfRepresentedLanes) {
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		LaneDefinitions20 lanes = scenario.getLanes();
 		LaneDefinitionsFactory20 builder = lanes.getFactory();
 		//lanes for link 1
@@ -84,7 +84,7 @@ public class QLaneTest extends MatsimTestCase {
 	}
   
 	private LaneDefinitions20 createLanes(ScenarioImpl scenario) {
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		LaneDefinitions20 lanes = scenario.getLanes();
 		LaneDefinitionsFactory20 builder = lanes.getFactory();
 		//lanes for link 1
@@ -139,7 +139,7 @@ public class QLaneTest extends MatsimTestCase {
 	
 	public void testCapacityWithOneLaneOneLane() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 		this.initNetwork(scenario.getNetwork());
 		this.createOneLane(scenario, 1);
@@ -170,10 +170,10 @@ public class QLaneTest extends MatsimTestCase {
 
 	public void testCapacityWithOneLaneOneLaneTwoLanes() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		this.initNetwork(scenario.getNetwork());
 		this.createOneLane(scenario, 2);
 
@@ -205,7 +205,7 @@ public class QLaneTest extends MatsimTestCase {
 	
 	public void testCapacityWithLanes() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 		this.initNetwork(scenario.getNetwork());
 		this.createLanes(scenario);
diff --git a/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLinkLanesTest.java b/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLinkLanesTest.java
index 8da7d84..fadc7a4 100644
--- a/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLinkLanesTest.java
+++ b/matsim/src/test/java/org/matsim/core/mobsim/qsim/qnetsimengine/QLinkLanesTest.java
@@ -62,7 +62,7 @@ public class QLinkLanesTest extends MatsimTestCase {
   }
   
 	private LaneDefinitions20 createOneLane(Scenario scenario, int numberOfRepresentedLanes) {
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		LaneDefinitions20 lanes = scenario.getLanes();
 		LaneDefinitionsFactory20 builder = lanes.getFactory();
 		//lanes for link 1
@@ -85,7 +85,7 @@ public class QLinkLanesTest extends MatsimTestCase {
 	}
   
 	private LaneDefinitions20 createLanes(Scenario scenario) {
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		LaneDefinitions20 lanes = scenario.getLanes();
 		LaneDefinitionsFactory20 builder = lanes.getFactory();
 		//lanes for link 1
@@ -140,7 +140,7 @@ public class QLinkLanesTest extends MatsimTestCase {
 	
 	public void testCapacityWithOneLaneOneLane() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 		this.initNetwork(scenario.getNetwork());
 		this.createOneLane(scenario, 1);
@@ -171,10 +171,10 @@ public class QLinkLanesTest extends MatsimTestCase {
 
 	public void testCapacityWithOneLaneOneLaneTwoLanes() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 		this.initNetwork(scenario.getNetwork());
 		this.createOneLane(scenario, 2);
 
@@ -206,7 +206,7 @@ public class QLinkLanesTest extends MatsimTestCase {
 	
 	public void testCapacityWithLanes() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(config);
 		this.initNetwork(scenario.getNetwork());
 		this.createLanes(scenario);
diff --git a/matsim/src/test/java/org/matsim/lanes/data/v20/LaneDefinitionsReaderWriterTest.java b/matsim/src/test/java/org/matsim/lanes/data/v20/LaneDefinitionsReaderWriterTest.java
index 8fe78c7..880a225 100644
--- a/matsim/src/test/java/org/matsim/lanes/data/v20/LaneDefinitionsReaderWriterTest.java
+++ b/matsim/src/test/java/org/matsim/lanes/data/v20/LaneDefinitionsReaderWriterTest.java
@@ -58,7 +58,7 @@ public class LaneDefinitionsReaderWriterTest extends MatsimTestCase {
 
 		Fixture(){
 			Config config = ConfigUtils.createConfig();
-			config.scenario().setUseLanes(true);
+			config.qsim().setUseLanes(true);
 			// need to LOAD the scenario in order for the lanes container to be created.
 			this.scenario = ScenarioUtils.loadScenario(config);
 		}
diff --git a/playgrounds/andreas/src/main/java/playground/andreas/intersection/zuerich/GenerateZuerrichOutput.java b/playgrounds/andreas/src/main/java/playground/andreas/intersection/zuerich/GenerateZuerrichOutput.java
index 1cd5943..f9cb43a 100644
--- a/playgrounds/andreas/src/main/java/playground/andreas/intersection/zuerich/GenerateZuerrichOutput.java
+++ b/playgrounds/andreas/src/main/java/playground/andreas/intersection/zuerich/GenerateZuerrichOutput.java
@@ -54,7 +54,7 @@ public class GenerateZuerrichOutput {
 	
 	public GenerateZuerrichOutput() {
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(generateLanes);
+		config.qsim().setUseLanes(generateLanes);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(generateSignalSystems);
 		Scenario scenario = ScenarioUtils.createScenario(config);
 		Network net = scenario.getNetwork();
diff --git a/playgrounds/balmermi/src/main/java/playground/balmermi/ConfigurationWriter.java b/playgrounds/balmermi/src/main/java/playground/balmermi/ConfigurationWriter.java
index c807648..ac3f052 100644
--- a/playgrounds/balmermi/src/main/java/playground/balmermi/ConfigurationWriter.java
+++ b/playgrounds/balmermi/src/main/java/playground/balmermi/ConfigurationWriter.java
@@ -2,14 +2,13 @@ package playground.balmermi;
 
 import org.matsim.core.config.Config;
 import org.matsim.core.config.ConfigWriter;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 
 public class ConfigurationWriter {
 
 	public static void main(String[] args) {
 		Config c = new Config();
 		c.addCoreModules();
-		c.addModule( new SimulationConfigGroup() );
+//		c.addModule( new SimulationConfigGroup() );
 		new ConfigWriter(c).write("../../../config_default.xml");
 	}
 }
diff --git a/playgrounds/benjamin/src/main/java/playground/benjamin/otfvis/BkVisLiveFromLastIteration.java b/playgrounds/benjamin/src/main/java/playground/benjamin/otfvis/BkVisLiveFromLastIteration.java
index db319db..b586e00 100644
--- a/playgrounds/benjamin/src/main/java/playground/benjamin/otfvis/BkVisLiveFromLastIteration.java
+++ b/playgrounds/benjamin/src/main/java/playground/benjamin/otfvis/BkVisLiveFromLastIteration.java
@@ -100,7 +100,7 @@ public class BkVisLiveFromLastIteration {
 		config.network().setInputFile(oldConfControlerIO.getOutputFilename(Controler.FILENAME_NETWORK));
 		config.plans()
 				.setInputFile(oldConfControlerIO.getOutputFilename(Controler.FILENAME_POPULATION));
-		if (config.scenario().isUseLanes()) {
+		if ( config.network().getLaneDefinitionsFile()!=null || config.qsim().isUseLanes()) {
 			config.network().setLaneDefinitionsFile(
 					oldConfControlerIO.getOutputFilename(Controler.FILENAME_LANES));
 		}
diff --git a/playgrounds/cottbus/src/main/java/playground/cottbus/FourWaysVis.java b/playgrounds/cottbus/src/main/java/playground/cottbus/FourWaysVis.java
index e2efcf0..1c9c11c 100644
--- a/playgrounds/cottbus/src/main/java/playground/cottbus/FourWaysVis.java
+++ b/playgrounds/cottbus/src/main/java/playground/cottbus/FourWaysVis.java
@@ -65,7 +65,7 @@ public class FourWaysVis {
 		scenario.getConfig().plans().setInputFile(popFile);
 		
 		scenario.getConfig().network().setLaneDefinitionsFile(lanesFile);
-		scenario.getConfig().scenario().setUseLanes(true);
+		scenario.getConfig().qsim().setUseLanes(true);
 
 		ConfigUtils.addOrGetModule(scenario.getConfig(), SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setSignalSystemFile(signalFile);
 		ConfigUtils.addOrGetModule(scenario.getConfig(), SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setSignalControlFile(signalConfigFile);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/DgEquilController.java b/playgrounds/dgrether/src/main/java/playground/dgrether/DgEquilController.java
index e7858ce..328976a 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/DgEquilController.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/DgEquilController.java
@@ -24,7 +24,6 @@ import java.util.Arrays;
 
 import org.matsim.core.config.Config;
 import org.matsim.core.config.ConfigReader;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.config.groups.QSimConfigGroup.SnapshotStyle;
 import org.matsim.core.controler.Controler;
 import org.matsim.core.controler.OutputDirectoryHierarchy;
@@ -69,7 +68,8 @@ public class DgEquilController {
 		  controler.getConfig().qsim().setSnapshotStyle(SnapshotStyle.queue);
 		}
 		else {
-		  ((SimulationConfigGroup) controler.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(1.0);
+//		  ((SimulationConfigGroup) controler.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(1.0);
+			throw new RuntimeException("no longer supported") ;
 		}
 
 		controler.getConfig().controler().setOverwriteFileSetting(
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/DgOTFVisReplayLastIteration.java b/playgrounds/dgrether/src/main/java/playground/dgrether/DgOTFVisReplayLastIteration.java
index 12c398e..1ad5bef 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/DgOTFVisReplayLastIteration.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/DgOTFVisReplayLastIteration.java
@@ -82,7 +82,7 @@ public class DgOTFVisReplayLastIteration {
 		config.network().setInputFile(oldConfControlerIO.getOutputFilename(Controler.FILENAME_NETWORK));
 		config.plans()
 				.setInputFile(oldConfControlerIO.getOutputFilename(Controler.FILENAME_POPULATION));
-		if (config.scenario().isUseLanes()) {
+		if ( config.network().getLaneDefinitionsFile()!=null || config.qsim().isUseLanes()) {
 			config.network().setLaneDefinitionsFile(
 					oldConfControlerIO.getOutputFilename(Controler.FILENAME_LANES));
 		}
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/CountsCreator.java b/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/CountsCreator.java
index 13b058e..e9cfd84 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/CountsCreator.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/CountsCreator.java
@@ -27,7 +27,6 @@ import org.matsim.api.core.v01.Scenario;
 import org.matsim.api.core.v01.network.Network;
 import org.matsim.core.config.Config;
 import org.matsim.core.config.ConfigUtils;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.network.MatsimNetworkReader;
 import org.matsim.core.network.NetworkUtils;
 import org.matsim.core.population.routes.LinkNetworkRouteImpl;
@@ -60,8 +59,11 @@ public class CountsCreator {
 	public CountsCreator(String networkPath) {
 		ScenarioImpl scenario = (ScenarioImpl) ScenarioUtils.createScenario(ConfigUtils.createConfig());
 		Config config = scenario.getConfig();
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(0.13);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(0.13);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(0.13);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(0.13);
+		Logger.getLogger(this.getClass()).fatal("SimulationConfigGroup is no longer there.  I don't think that the code here is still "
+				+ "operational so I am not fixing it.  kai, jul'15");
+		System.exit(-1) ;
 		this.network = scenario.getNetwork();
 		loadNetwork(networkPath, scenario);
 		log.info("  creating routes...");
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/RunResultsLoader.java b/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/RunResultsLoader.java
index d427d21..e5adc69 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/RunResultsLoader.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/analysis/RunResultsLoader.java
@@ -127,7 +127,7 @@ public class RunResultsLoader {
 	
 	private LaneDefinitions20 loadLanes(String path) {
 		Config c = ConfigUtils.createConfig();
-		c.scenario().setUseLanes(true);
+		c.qsim().setUseLanes(true);
 		Scenario sc = ScenarioUtils.createScenario(c);
 		LaneDefinitionsReader reader = new LaneDefinitionsReader(sc);
 		reader.readFile(path);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/daganzosignal/DaganzoScenarioGenerator.java b/playgrounds/dgrether/src/main/java/playground/dgrether/daganzosignal/DaganzoScenarioGenerator.java
index bd3b914..aaaa9ee 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/daganzosignal/DaganzoScenarioGenerator.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/daganzosignal/DaganzoScenarioGenerator.java
@@ -233,7 +233,7 @@ public class DaganzoScenarioGenerator {
 //		createPlans(scenario);
 //		new PopulationWriter(scenario.getPopulation(), scenario.getNetwork()).write(plansOut);
 		if (isUseLanes) {
-			config.scenario().setUseLanes(true);
+			config.qsim().setUseLanes(true);
 			config.network().setLaneDefinitionsFile(LANESOUTPUTFILE);
 			//create the lanes and write them
 			LaneDefinitions20 lanes = createLanes(scenario);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/koehlerstrehlersignal/figure9scenario/DgFigure9ScenarioGenerator.java b/playgrounds/dgrether/src/main/java/playground/dgrether/koehlerstrehlersignal/figure9scenario/DgFigure9ScenarioGenerator.java
index 2d6018a..91d4eec 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/koehlerstrehlersignal/figure9scenario/DgFigure9ScenarioGenerator.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/koehlerstrehlersignal/figure9scenario/DgFigure9ScenarioGenerator.java
@@ -96,7 +96,7 @@ public class DgFigure9ScenarioGenerator {
 	private void createScenario() {
 		this.initIds();
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		Scenario scenario = ScenarioUtils.createScenario(config);
 		
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/lanes/laneLayoutTest/LaneLayoutTestShowLanes.java b/playgrounds/dgrether/src/main/java/playground/dgrether/lanes/laneLayoutTest/LaneLayoutTestShowLanes.java
index c8257a9..f68c479 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/lanes/laneLayoutTest/LaneLayoutTestShowLanes.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/lanes/laneLayoutTest/LaneLayoutTestShowLanes.java
@@ -50,7 +50,7 @@ public class LaneLayoutTestShowLanes {
 		config.network().setInputFile(LaneLayoutTestFileNames.NETWORK);
 		config.network().setLaneDefinitionsFile(LaneLayoutTestFileNames.LANEDEFINITIONSV2);
 		config.plans().setInputFile(LaneLayoutTestFileNames.POPULATION);
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 //		config.otfVis().setLinkWidth(150.0f);
 		ConfigUtils.addOrGetModule(config, OTFVisConfigGroup.GROUP_NAME, OTFVisConfigGroup.class).setDrawLinkIds(true);
 		config.qsim().setNodeOffset(30);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/PoznanNetwork.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/PoznanNetwork.java
index 7586e73..a858bdc 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/PoznanNetwork.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/PoznanNetwork.java
@@ -565,7 +565,7 @@ public class PoznanNetwork
         config.qsim().setSimStarttimeInterpretation(QSimConfigGroup.StarttimeInterpretation.onlyUseStarttime);
         config.qsim().setStartTime(0.0);
         config.qsim().setSnapshotStyle( SnapshotStyle.queue ) ;;
-        config.scenario().setUseLanes(true);
+        config.qsim().setUseLanes(true);
         ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
         OTFVisConfigGroup otfconfig = ConfigUtils.addOrGetModule(config, OTFVisConfigGroup.GROUP_NAME, OTFVisConfigGroup.class);
         otfconfig.setAgentSize(70.0f);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/cottbus/CottbusUtils.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/cottbus/CottbusUtils.java
index ab1089c..70459cd 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/cottbus/CottbusUtils.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/cottbus/CottbusUtils.java
@@ -38,7 +38,7 @@ public class CottbusUtils {
 
 	public static ScenarioImpl loadCottbusScenrio(boolean fixedTimeSignals){
 		Config c2 = ConfigUtils.createConfig();
-		c2.scenario().setUseLanes(true);
+		c2.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(c2, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		c2.network().setInputFile(DgCottbusScenarioPaths.NETWORK_FILENAME);
 		c2.network().setLaneDefinitionsFile(DgCottbusScenarioPaths.LANES_FILENAME);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/laemmer/testsinglecrossing/SingleCrossingScenario.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/laemmer/testsinglecrossing/SingleCrossingScenario.java
index 231248c..c7a0ac1 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/laemmer/testsinglecrossing/SingleCrossingScenario.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/laemmer/testsinglecrossing/SingleCrossingScenario.java
@@ -345,7 +345,7 @@ public class SingleCrossingScenario {
 		String network = repos + "shared-svn/studies/dgrether/laemmer/isolatedcrossingtest/network.xml";
 		Config config = ConfigUtils.createConfig();
 		config.network().setInputFile(network);
-		config.scenario().setUseLanes(false);
+		config.qsim().setUseLanes(false);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		QSimConfigGroup qsim = config.qsim();
 		qsim.setSnapshotStyle( SnapshotStyle.queue ) ;;
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/osm/DgOsmJunctionsPostprocessing.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/osm/DgOsmJunctionsPostprocessing.java
index 84132ab..263b975 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/osm/DgOsmJunctionsPostprocessing.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/osm/DgOsmJunctionsPostprocessing.java
@@ -234,7 +234,7 @@ public class DgOsmJunctionsPostprocessing {
 		ScenarioImpl sc = (ScenarioImpl) ScenarioUtils.createScenario(ConfigUtils.createConfig());
     sc.getConfig().network().setInputFile(net);
     if (lanesInputFile != null){
-    	sc.getConfig().scenario().setUseLanes(true);
+    	sc.getConfig().qsim().setUseLanes(true);
     	sc.getConfig().network().setLaneDefinitionsFile(lanesInputFile);
     }
     ScenarioLoaderImpl loader = new ScenarioLoaderImpl(sc);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVis.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVis.java
index bdef45e..21b75f0 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVis.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVis.java
@@ -82,7 +82,7 @@ public class FourWaysVis {
 //		converter.convert(lanesFile, lanesFile20, netFile);
 
 		config.network().setLaneDefinitionsFile(lanesFile20);
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 
 		Scenario scenario = ScenarioUtils.loadScenario(config);
 		
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisMviTest.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisMviTest.java
index 53a2803..7b7a553 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisMviTest.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisMviTest.java
@@ -71,7 +71,7 @@ public class FourWaysVisMviTest {
     conf.qsim().setStuckTime(100.0);
     
     conf.network().setLaneDefinitionsFile(lanesFile);
-    conf.scenario().setUseLanes(true);
+    conf.qsim().setUseLanes(true);
 
     ConfigUtils.addOrGetModule(scenario.getConfig(), SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setSignalSystemFile(signalFile);
     ConfigUtils.addOrGetModule(scenario.getConfig(), SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setSignalGroupsFile(signalGroupsFile);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisNetworkOnly.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisNetworkOnly.java
index b87890c..203a5fc 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisNetworkOnly.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/otfvis/FourWaysVisNetworkOnly.java
@@ -42,7 +42,7 @@ public class FourWaysVisNetworkOnly {
 		String[] netArray = {netFile};
 
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		config.network().setLaneDefinitionsFile(lanesFile);
 
 		//this is run
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/sylvia/controler/DgSylviaSignalControlerListener.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/sylvia/controler/DgSylviaSignalControlerListener.java
index 3f31d0f..6b188bd 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/sylvia/controler/DgSylviaSignalControlerListener.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/sylvia/controler/DgSylviaSignalControlerListener.java
@@ -72,7 +72,7 @@ public class DgSylviaSignalControlerListener implements SignalsControllerListene
 		ScenarioImpl scenario = (ScenarioImpl) event.getControler().getScenario();
 		
 		this.sensorManager = new DgSensorManager(event.getControler().getScenario().getNetwork());
-		if (scenario.getConfig().scenario().isUseLanes()){
+		if ( scenario.getConfig().network().getLaneDefinitionsFile()!=null || scenario.getConfig().qsim().isUseLanes()){
 			this.sensorManager.setLaneDefinitions((LaneDefinitions20) scenario.getScenarioElement(LaneDefinitions20.ELEMENT_NAME));
 		}
 		event.getControler().getEvents().addHandler(sensorManager);
diff --git a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/utils/DgScenarioUtils.java b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/utils/DgScenarioUtils.java
index ecb5baf..23afb89 100644
--- a/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/utils/DgScenarioUtils.java
+++ b/playgrounds/dgrether/src/main/java/playground/dgrether/signalsystems/utils/DgScenarioUtils.java
@@ -37,7 +37,7 @@ public class DgScenarioUtils {
 	public static Scenario loadScenario(String net, String pop, String lanesFilename, String signalsFilename,
 			String signalGroupsFilename, String signalControlFilename){
 		Config c2 = ConfigUtils.createConfig();
-		c2.scenario().setUseLanes(true);
+		c2.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(c2, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		c2.network().setInputFile(net);
 		if (loadPopulation){
diff --git a/playgrounds/dgrether/src/test/java/playground/dgrether/signalsystems/DgCalculateSignalGroupsTest.java b/playgrounds/dgrether/src/test/java/playground/dgrether/signalsystems/DgCalculateSignalGroupsTest.java
index 48ea05c..23dd1f6 100644
--- a/playgrounds/dgrether/src/test/java/playground/dgrether/signalsystems/DgCalculateSignalGroupsTest.java
+++ b/playgrounds/dgrether/src/test/java/playground/dgrether/signalsystems/DgCalculateSignalGroupsTest.java
@@ -112,7 +112,7 @@ public class DgCalculateSignalGroupsTest {
 	@Test
 	public void test3WayCrossingManySignals(){
 		Config config = ConfigUtils.createConfig();
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 		ScenarioImpl sc = (ScenarioImpl) ScenarioUtils.createScenario(config);
 
@@ -230,7 +230,7 @@ public class DgCalculateSignalGroupsTest {
 	@Test
 	public void test4WayCrossingManySignals() throws JAXBException, SAXException, ParserConfigurationException, IOException{
 		Config conf = ConfigUtils.createConfig();
-		conf.scenario().setUseLanes(true);
+		conf.qsim().setUseLanes(true);
 		//network
 		String inputDirectory = this.testUtils.getClassInputDirectory();
 		conf.network().setInputFile(inputDirectory + "network.xml.gz");
diff --git a/playgrounds/dziemke/src/main/java/playground/dziemke/cemdapMatsimCadyts/controller/CadytsEquilController.java b/playgrounds/dziemke/src/main/java/playground/dziemke/cemdapMatsimCadyts/controller/CadytsEquilController.java
index e4ab596..b655382 100644
--- a/playgrounds/dziemke/src/main/java/playground/dziemke/cemdapMatsimCadyts/controller/CadytsEquilController.java
+++ b/playgrounds/dziemke/src/main/java/playground/dziemke/cemdapMatsimCadyts/controller/CadytsEquilController.java
@@ -8,8 +8,8 @@ import org.matsim.api.core.v01.Id;
 import org.matsim.core.config.Config;
 import org.matsim.core.config.ConfigUtils;
 import org.matsim.core.config.groups.PlanCalcScoreConfigGroup.ActivityParams;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.config.groups.StrategyConfigGroup.StrategySettings;
+import org.matsim.core.config.groups.VspExperimentalConfigGroup.VspDefaultsCheckingLevel;
 import org.matsim.core.controler.Controler;
 
 public class CadytsEquilController {
@@ -46,10 +46,14 @@ public class CadytsEquilController {
 //		config.getQSimConfigGroup().setEndTime(0);
 //		config.getQSimConfigGroup().setSnapshotPeriod(60);
 		
-		config.addModule( new SimulationConfigGroup() );
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStartTime(0);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setEndTime(0);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(60);
+//		config.addModule( new SimulationConfigGroup() );
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStartTime(0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setEndTime(0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(60);
+		Logger.getLogger("dummy").fatal("SimulationConfigGroup is no longer there.  Since `simulation' has been gone for some time now, "
+				+ "I cannot see how the above may have worked so I am not fixing it.  kai, jul'15");
+		System.exit(-1);
+		
 		
 		// counts
 		String countsFileName = "D:/Workspace/container/examples/equil/input/counts100-200.xml";
@@ -58,7 +62,8 @@ public class CadytsEquilController {
 		config.counts().setOutputFormat("all");
 		
 		// vsp experimental
-		config.vspExperimental().addParam("vspDefaultsCheckingLevel", "abort");
+//		config.vspExperimental().addParam("vspDefaultsCheckingLevel", "abort");
+		config.vspExperimental().setVspDefaultsCheckingLevel( VspDefaultsCheckingLevel.abort );
 		
 		// controller
 		String runId = "57";
diff --git a/playgrounds/gregor/src/main/java/playground/gregor/grips/complexscenariogenerator/ComplexScenarioGenerator.java b/playgrounds/gregor/src/main/java/playground/gregor/grips/complexscenariogenerator/ComplexScenarioGenerator.java
index 850b89e..61f65b5 100644
--- a/playgrounds/gregor/src/main/java/playground/gregor/grips/complexscenariogenerator/ComplexScenarioGenerator.java
+++ b/playgrounds/gregor/src/main/java/playground/gregor/grips/complexscenariogenerator/ComplexScenarioGenerator.java
@@ -20,11 +20,11 @@
 
 package playground.gregor.grips.complexscenariogenerator;
 
+import org.apache.log4j.Logger;
 import org.matsim.api.core.v01.Scenario;
 import org.matsim.contrib.evacuation.model.config.EvacuationConfigModule;
 import org.matsim.contrib.evacuation.scenariogenerator.ScenarioGenerator;
 import org.matsim.core.config.groups.PlanCalcScoreConfigGroup.ActivityParams;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.population.PopulationWriter;
 
 public class ComplexScenarioGenerator extends ScenarioGenerator {
@@ -82,8 +82,11 @@ public class ComplexScenarioGenerator extends ScenarioGenerator {
 		new PopulationWriter(sc.getPopulation(), sc.getNetwork(), gcm.getSampleSize()).write(outputPopulationFile);
 		sc.getConfig().plans().setInputFile(outputPopulationFile);
 
-		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(gcm.getSampleSize());
-		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(gcm.getSampleSize());
+//		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(gcm.getSampleSize());
+//		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(gcm.getSampleSize());
+		Logger.getLogger("dummy").fatal("SimulationConfigGroup is no longer there.  Since `simulation' has been gone for some time now, "
+				+ "I cannot see how the above may have worked so I am not fixing it.  kai, jul'15");
+		System.exit(-1);
 
 		ActivityParams pre = new ActivityParams("pre-evac");
 		pre.setTypicalDuration(49); // needs to be geq 49, otherwise when running a simulation one gets "java.lang.RuntimeException: zeroUtilityDuration of type pre-evac must be greater than 0.0. Did you forget to specify the typicalDuration?"
diff --git a/playgrounds/gregor/src/main/java/playground/gregor/grips/scenariogeneratorpt/ScenarioGeneratorPT.java b/playgrounds/gregor/src/main/java/playground/gregor/grips/scenariogeneratorpt/ScenarioGeneratorPT.java
index 64c7eb7..2c1778c 100644
--- a/playgrounds/gregor/src/main/java/playground/gregor/grips/scenariogeneratorpt/ScenarioGeneratorPT.java
+++ b/playgrounds/gregor/src/main/java/playground/gregor/grips/scenariogeneratorpt/ScenarioGeneratorPT.java
@@ -19,7 +19,13 @@
 
 package playground.gregor.grips.scenariogeneratorpt;
 
-import com.vividsolutions.jts.geom.Geometry;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 
 import org.apache.log4j.Logger;
 import org.matsim.api.core.v01.Id;
@@ -35,7 +41,6 @@ import org.matsim.core.config.ConfigUtils;
 import org.matsim.core.config.ConfigWriter;
 import org.matsim.core.config.groups.PlanCalcScoreConfigGroup.ActivityParams;
 import org.matsim.core.config.groups.QSimConfigGroup;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.network.LinkImpl;
 import org.matsim.core.network.NetworkImpl;
 import org.matsim.core.network.NetworkUtils;
@@ -55,11 +60,22 @@ import org.matsim.core.utils.gis.ShapeFileReader;
 import org.matsim.pt.config.TransitConfigGroup;
 import org.matsim.pt.transitSchedule.TransitScheduleFactoryImpl;
 import org.matsim.pt.transitSchedule.TransitScheduleWriterV1;
-import org.matsim.pt.transitSchedule.api.*;
-import org.matsim.vehicles.*;
+import org.matsim.pt.transitSchedule.api.Departure;
+import org.matsim.pt.transitSchedule.api.TransitLine;
+import org.matsim.pt.transitSchedule.api.TransitRoute;
+import org.matsim.pt.transitSchedule.api.TransitRouteStop;
+import org.matsim.pt.transitSchedule.api.TransitSchedule;
+import org.matsim.pt.transitSchedule.api.TransitScheduleFactory;
+import org.matsim.pt.transitSchedule.api.TransitStopFacility;
+import org.matsim.vehicles.Vehicle;
+import org.matsim.vehicles.VehicleCapacity;
+import org.matsim.vehicles.VehicleType;
+import org.matsim.vehicles.VehicleWriterV1;
+import org.matsim.vehicles.Vehicles;
+import org.matsim.vehicles.VehiclesFactory;
 import org.opengis.feature.simple.SimpleFeature;
 
-import java.util.*;
+import com.vividsolutions.jts.geom.Geometry;
 
 
 public class ScenarioGeneratorPT extends ScenarioGenerator {
@@ -84,7 +100,7 @@ public class ScenarioGeneratorPT extends ScenarioGenerator {
 		this.c.transit().setUseTransit(true);
 		this.c.scenario().setUseVehicles(true);
 		
-		this.c.addModule( new SimulationConfigGroup() );
+//		this.c.addModule( new SimulationConfigGroup() );
 		this.c.global().setCoordinateSystem("EPSG:3395");
 		this.c.controler().setOutputDirectory(getEvacuationConfig(this.c).getOutputDir()+"/output");
 		this.sc = ScenarioUtils.createScenario(this.c);
@@ -312,8 +328,11 @@ public class ScenarioGeneratorPT extends ScenarioGenerator {
 		new PopulationWriter(sc.getPopulation(), sc.getNetwork(), gcm.getSampleSize()).write(outputPopulationFile);
 		sc.getConfig().plans().setInputFile(outputPopulationFile);
 
-		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(gcm.getSampleSize());
-		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(gcm.getSampleSize());
+//		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(gcm.getSampleSize());
+//		((SimulationConfigGroup) sc.getConfig().getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(gcm.getSampleSize());
+		Logger.getLogger("dummy").fatal("SimulationConfigGroup is no longer there.  Since `simulation' has been gone for some time now, "
+				+ "I cannot see how the above may have worked so I am not fixing it.  kai, jul'15");
+		System.exit(-1);
 
 		ActivityParams pre = new ActivityParams("pre-evac");
 		pre.setTypicalDuration(49); // needs to be geq 49, otherwise when running a simulation one gets "java.lang.RuntimeException: zeroUtilityDuration of type pre-evac must be greater than 0.0. Did you forget to specify the typicalDuration?"
diff --git a/playgrounds/jjoubert/src/main/java/playground/jjoubert/Utilities/matsim2urbansim/controler/MyBasicConfig.java b/playgrounds/jjoubert/src/main/java/playground/jjoubert/Utilities/matsim2urbansim/controler/MyBasicConfig.java
index 8a78e1e..5ed14b8 100644
--- a/playgrounds/jjoubert/src/main/java/playground/jjoubert/Utilities/matsim2urbansim/controler/MyBasicConfig.java
+++ b/playgrounds/jjoubert/src/main/java/playground/jjoubert/Utilities/matsim2urbansim/controler/MyBasicConfig.java
@@ -22,12 +22,12 @@ package playground.jjoubert.Utilities.matsim2urbansim.controler;
 
 import java.util.Arrays;
 
+import org.apache.log4j.Logger;
 import org.matsim.api.core.v01.Id;
 import org.matsim.core.config.Config;
 import org.matsim.core.config.groups.ControlerConfigGroup.RoutingAlgorithmType;
 import org.matsim.core.config.groups.PlanCalcScoreConfigGroup.ActivityParams;
 import org.matsim.core.config.groups.QSimConfigGroup;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.config.groups.StrategyConfigGroup.StrategySettings;
 
 public class MyBasicConfig {
@@ -58,11 +58,14 @@ public class MyBasicConfig {
 		config.controler().setOutputDirectory("./output/");
 
 		// Simulation.
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStartTime(0);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setEndTime(86400);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(0);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(1.0);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(1.0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStartTime(0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setEndTime(86400);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(1.0);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(1.0);
+		Logger.getLogger("dummy").fatal("SimulationConfigGroup is no longer there.  Since `simulation' has been gone for some time now, "
+				+ "I cannot see how the above may have worked so I am not fixing it.  kai, jul'15");
+		System.exit(-1);
 
 		// PlanCalcScore
 		config.planCalcScore().setLearningRate(1.0);
diff --git a/playgrounds/jjoubert/src/main/java/playground/jjoubert/roadpricing/controler/SanralControler_base.java b/playgrounds/jjoubert/src/main/java/playground/jjoubert/roadpricing/controler/SanralControler_base.java
index de292ee..a24dbd4 100644
--- a/playgrounds/jjoubert/src/main/java/playground/jjoubert/roadpricing/controler/SanralControler_base.java
+++ b/playgrounds/jjoubert/src/main/java/playground/jjoubert/roadpricing/controler/SanralControler_base.java
@@ -1,11 +1,12 @@
 package playground.jjoubert.roadpricing.controler;
 
+import org.apache.log4j.Logger;
 import org.matsim.core.config.Config;
 import org.matsim.core.config.ConfigWriter;
 import org.matsim.core.config.groups.PlanCalcScoreConfigGroup.ActivityParams;
-import org.matsim.core.config.groups.SimulationConfigGroup;
 import org.matsim.core.controler.Controler;
 import org.matsim.core.controler.OutputDirectoryHierarchy;
+
 import playground.jjoubert.Utilities.matsim2urbansim.controler.MyBasicConfig;
 
 public class SanralControler_base {
@@ -28,9 +29,13 @@ public class SanralControler_base {
 		config.global().setCoordinateSystem("WGS84_UTM35S");
 		config.global().setNumberOfThreads(15);
 		// Simulation.
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(0.1);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(0.28);
-		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(900);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setFlowCapFactor(0.1);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setStorageCapFactor(0.28);
+//		((SimulationConfigGroup) config.getModule(SimulationConfigGroup.GROUP_NAME)).setSnapshotPeriod(900);
+		Logger.getLogger("dummy").fatal("SimulationConfigGroup is no longer there.  Since `simulation' has been gone for some time now, "
+				+ "I cannot see how the above may have worked so I am not fixing it.  kai, jul'15");
+		System.exit(-1);
+
 		// Network.
 		config.network().setInputFile(root + "network/gautengNetwork_CleanV0.xml.gz");
 		config.network();
diff --git a/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java b/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
index d61bf88..db6a537 100644
--- a/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
@@ -145,7 +145,7 @@ public class ScenarioLoaderImpl {
 		if ( this.config.vehicles().getVehiclesFile() != null ) {
 			this.loadVehicles();
 		}
-		if (this.config.scenario().isUseLanes()) {
+		if (this.config.network().getLaneDefinitionsFile()!=null ) {
 			this.loadLanes();
 		}
 		return this.scenario;
diff --git a/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java b/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
index 53e5bf2..ef1357d 100644
--- a/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
@@ -105,6 +105,8 @@ public class ScenarioLoaderImpl {
 	public ScenarioLoaderImpl(Config config) {
 		this.config = config;
 		this.scenario = (WeeklyScenarioImpl) ScenarioUtils.createScenario(this.config);
+		throw new RuntimeException("I end up redoing manual refactoring here that I have already done at the original class in the core."
+				+ " Could you please either remove this class, or work with us to achieve code re-use from the core?  Thanks.  kai, jul'15") ;
 	}
 
 	/**
@@ -150,7 +152,7 @@ public class ScenarioLoaderImpl {
 		if (this.config.vehicles().getVehiclesFile() != null ) {
 			this.loadVehicles();
 		}
-		if (this.config.scenario().isUseLanes()) {
+		if (this.config.network().getLaneDefinitionsFile() != null ) {
 			this.loadLanes();
 		}
 		return this.scenario;
diff --git a/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java b/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
index 88c61b7..9792101 100644
--- a/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
@@ -148,10 +148,10 @@ public class ScenarioLoaderImpl {
 		if (this.config.vehicles().getVehiclesFile() != null ) {
 			this.loadVehicles();
 		}
-		if (this.config.scenario().isUseLanes()) {
+		if (this.config.network().getLaneDefinitionsFile()!=null ) {
 			this.loadLanes();
 		}
-		if ((boolean) ConfigUtils.addOrGetModule(this.config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems()){
+		if (ConfigUtils.addOrGetModule(this.config, SignalSystemsConfigGroup.GROUPNAME, SignalSystemsConfigGroup.class).isUseSignalSystems()){
 			this.loadSignalSystems();
 		}
 		return this.scenario;
diff --git a/playgrounds/tthunig/src/main/java/scenarios/braess/createInput/TtCreateBraessSignals.java b/playgrounds/tthunig/src/main/java/scenarios/braess/createInput/TtCreateBraessSignals.java
index 613a440..b4b49dd 100644
--- a/playgrounds/tthunig/src/main/java/scenarios/braess/createInput/TtCreateBraessSignals.java
+++ b/playgrounds/tthunig/src/main/java/scenarios/braess/createInput/TtCreateBraessSignals.java
@@ -54,7 +54,9 @@ public class TtCreateBraessSignals {
 
 		checkInflowSimulation();
 		// check whether lanes are used or not
-		this.lanesUsed = this.scenario.getConfig().scenario().isUseLanes();
+//		this.lanesUsed = this.scenario.getConfig().scenario().isUseLanes();
+		this.lanesUsed = this.scenario.getConfig().network().getLaneDefinitionsFile()!=null || this.scenario.getConfig().qsim().isUseLanes();
+		throw new RuntimeException("not sure if I got the above right; please ask if running into problems. kai, jul'15") ;
 	}
 
 	/**
diff --git a/playgrounds/tthunig/src/main/java/scenarios/braess/run/RunBraessSimulation.java b/playgrounds/tthunig/src/main/java/scenarios/braess/run/RunBraessSimulation.java
index 322d4a7..8b4e685 100644
--- a/playgrounds/tthunig/src/main/java/scenarios/braess/run/RunBraessSimulation.java
+++ b/playgrounds/tthunig/src/main/java/scenarios/braess/run/RunBraessSimulation.java
@@ -116,7 +116,7 @@ public class RunBraessSimulation {
 		config.controler().setLastIteration( 100 );
 
 		// able or enable signals and lanes
-		config.scenario().setUseLanes( false );
+		config.qsim().setUseLanes( false );
 		ConfigUtils.addOrGetModule(config, SignalSystemsConfigGroup.GROUPNAME,
 				SignalSystemsConfigGroup.class).setUseSignalSystems(true);
 
@@ -209,9 +209,10 @@ public class RunBraessSimulation {
 		netCreator.setRetardMiddleRoute( false );
 		netCreator.createNetwork();
 		
-		if (scenario.getConfig().scenario().isUseLanes()){
+		if ( scenario.getConfig().qsim().isUseLanes() ){
 			netCreator.createLanes();
 		}
+		throw new RuntimeException("careful, need to set lanes in qsim now (delete this line once this is clear). kai, jul'15") ;
 	}
 
 	private void createPopulation(Scenario scenario) {
@@ -292,7 +293,7 @@ public class RunBraessSimulation {
 			runName += "_distCost"
 					+ config.planCalcScore().getMonetaryDistanceCostRateCar();
 
-		if (config.scenario().isUseLanes()) {
+		if (config.qsim().isUseLanes()) {
 			runName += "_lanes";
 		}
 
diff --git a/playgrounds/tthunig/src/test/java/lanes/LinkLaneTTTest.java b/playgrounds/tthunig/src/test/java/lanes/LinkLaneTTTest.java
index 992e88a..5115f03 100644
--- a/playgrounds/tthunig/src/test/java/lanes/LinkLaneTTTest.java
+++ b/playgrounds/tthunig/src/test/java/lanes/LinkLaneTTTest.java
@@ -349,7 +349,7 @@ public class LinkLaneTTTest {
 		qSimConfigGroup.setInsertingWaitingVehiclesBeforeDrivingVehicles(true);
 		qSimConfigGroup.setRemoveStuckVehicles(true);
 		qSimConfigGroup.setStuckTime(3600.0);
-		config.scenario().setUseLanes(true);
+		config.qsim().setUseLanes(true);
 		return config;
 	}
 	
-- 
2.3.2 (Apple Git-55)

