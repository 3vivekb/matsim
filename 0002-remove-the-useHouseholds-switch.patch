From cfcddd7d045cf885b656c013de601df970991e4f Mon Sep 17 00:00:00 2001
From: Kai Nagel <2008@kainagel.org>
Date: Fri, 17 Jul 2015 09:09:03 +0200
Subject: [PATCH 02/16] remove the useHouseholds switch

---
 .../replanning/grouping/FixedGroupsIdentifier.java |  2 +-
 .../org/matsim/contrib/socnetsim/run/RunUtils.java |  2 +-
 .../core/config/groups/ScenarioConfigGroup.java    | 19 +++----
 .../controler/corelisteners/DumpDataAtEndImpl.java | 62 ++++++++++++++--------
 .../org/matsim/core/scenario/ScenarioImpl.java     |  9 +---
 .../matsim/core/scenario/ScenarioLoaderImpl.java   | 26 +++++----
 .../core/scenario/ScenarioLoaderImplTest.java      | 26 ++++-----
 .../run/ControlerListenerSocial.java               |  2 +-
 .../scenario/ScenarioLoaderImpl.java               |  2 +-
 .../scenario/ScenarioLoaderImpl.java               |  2 +-
 .../scenario/ScenarioLoaderImpl.java               |  2 +-
 11 files changed, 89 insertions(+), 65 deletions(-)

diff --git a/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/framework/replanning/grouping/FixedGroupsIdentifier.java b/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/framework/replanning/grouping/FixedGroupsIdentifier.java
index b75d57c..ba2e05a 100644
--- a/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/framework/replanning/grouping/FixedGroupsIdentifier.java
+++ b/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/framework/replanning/grouping/FixedGroupsIdentifier.java
@@ -63,7 +63,7 @@ public class FixedGroupsIdentifier implements GroupIdentifier {
 			final CliquesConfigGroup cliquesConf = (CliquesConfigGroup)
 						config.getModule( CliquesConfigGroup.GROUP_NAME );
 
-			return config.scenario().isUseHouseholds() ?
+			return config.households().getInputFile()!=null ?
 					new FixedGroupsIdentifier(
 							((ScenarioImpl) scenario).getHouseholds() ) :
 					FixedGroupsIdentifierFileParser.readCliquesFile(
diff --git a/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/run/RunUtils.java b/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/run/RunUtils.java
index 5c11f52..6923a6e 100644
--- a/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/run/RunUtils.java
+++ b/contribs/socnetsim/src/main/java/org/matsim/contrib/socnetsim/run/RunUtils.java
@@ -180,7 +180,7 @@ public class RunUtils {
 		final GroupReplanningConfigGroup weights =  (GroupReplanningConfigGroup)
 			config.getModule( GroupReplanningConfigGroup.GROUP_NAME );
 
-		if ( config.scenario().isUseHouseholds() && weights.getUseLimitedVehicles() ) {
+		if ( config.households().getInputFile()!=null && weights.getUseLimitedVehicles() ) {
 			scenario.addScenarioElement(
 							VehicleRessources.ELEMENT_NAME,
 							new HouseholdBasedVehicleRessources(
diff --git a/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java b/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
index a6228e8..0404ba4 100644
--- a/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
+++ b/matsim/src/main/java/org/matsim/core/config/groups/ScenarioConfigGroup.java
@@ -42,10 +42,10 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 	private static final String USE_TRANSIT = "useTransit";
 	private static final String USE_VEHICLES = "useVehicles";
 	
+	@SuppressWarnings("unused")
 	private static final Logger log = Logger.getLogger( ScenarioConfigGroup.class ) ;
 	
 	private boolean useLanes = false;
-	private boolean useHouseholds = false;
 
 	public ScenarioConfigGroup() {
 		super(GROUP_NAME);
@@ -55,8 +55,8 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 	public Map<String, String> getComments() {
 		Map<String,String> map = super.getComments();
 		map.put(USE_LANES, "Set this parameter to true if lanes should be used, false if not.");
-		map.put(USE_HOUSEHOLDS, "Set this parameter to true if households should be used, false if not.");
-		map.put(USE_TRANSIT, "Deprecated, to not use.  See transit section of config file.") ; // since jul'15
+		map.put(USE_HOUSEHOLDS, "Deprecated, do not use.  The file is loaded when the filename is given.  Functionality needs to be switched on elsewhere.");
+		map.put(USE_TRANSIT, "Deprecated, do not use.  See transit section of config file.") ; // since jul'15
 		return map;
 	}
 
@@ -87,7 +87,6 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 		Map<String, String> params = super.getParams();
 
 		params.put(USE_LANES, Boolean.toString( this.isUseLanes() ) ) ;
-		params.put(USE_HOUSEHOLDS, Boolean.toString( this.isUseHouseholds() ) ) ;
 
 		return params;
 	}
@@ -100,12 +99,14 @@ public final class ScenarioConfigGroup extends ConfigGroup {
 		this.useLanes = useLanes;
 	}
 
-	public boolean isUseHouseholds() {
-		return this.useHouseholds;
-	}
+//	public boolean isUseHouseholds() {
+//		return this.useHouseholds;
+//	}
 
-	public void setUseHouseholds(final boolean b) {
-		this.useHouseholds = b;
+	@SuppressWarnings("static-method")
+	@Deprecated // since jul'15
+	public void setUseHouseholds(@SuppressWarnings("unused") final boolean b) {
+		throw new RuntimeException( getMessage( USE_HOUSEHOLDS ) ) ;
 	}
 
 	// if they are not in getParams, they will not be included into the config file dump.
diff --git a/matsim/src/main/java/org/matsim/core/controler/corelisteners/DumpDataAtEndImpl.java b/matsim/src/main/java/org/matsim/core/controler/corelisteners/DumpDataAtEndImpl.java
index 804dfb1..c41a6bc 100644
--- a/matsim/src/main/java/org/matsim/core/controler/corelisteners/DumpDataAtEndImpl.java
+++ b/matsim/src/main/java/org/matsim/core/controler/corelisteners/DumpDataAtEndImpl.java
@@ -21,6 +21,7 @@ package org.matsim.core.controler.corelisteners;
 
 import com.google.inject.Inject;
 import com.google.inject.Singleton;
+
 import org.apache.log4j.Logger;
 import org.matsim.api.core.v01.Scenario;
 import org.matsim.api.core.v01.population.PopulationWriter;
@@ -36,12 +37,16 @@ import org.matsim.core.network.NetworkWriter;
 import org.matsim.core.utils.io.IOUtils;
 import org.matsim.facilities.ActivityFacilities;
 import org.matsim.facilities.FacilitiesWriter;
+import org.matsim.households.Households;
 import org.matsim.households.HouseholdsWriterV10;
+import org.matsim.lanes.data.v20.LaneDefinitions20;
 import org.matsim.lanes.data.v20.LaneDefinitionsWriter20;
+import org.matsim.pt.transitSchedule.api.TransitSchedule;
 import org.matsim.pt.transitSchedule.api.TransitScheduleWriter;
 import org.matsim.utils.objectattributes.ObjectAttributes;
 import org.matsim.utils.objectattributes.ObjectAttributesXmlWriter;
 import org.matsim.vehicles.VehicleWriterV1;
+import org.matsim.vehicles.Vehicles;
 
 import java.io.File;
 
@@ -73,31 +78,46 @@ final class DumpDataAtEndImpl implements DumpDataAtEnd, ShutdownListener {
 		// dump config
 		new ConfigWriter(scenarioData.getConfig()).write(controlerIO.getOutputFilename(Controler.FILENAME_CONFIG));
 		// dump facilities
-		ActivityFacilities facilities = scenarioData.getActivityFacilities();
-		if (facilities != null) {
-			new FacilitiesWriter(facilities).write(controlerIO.getOutputFilename("output_facilities.xml.gz"));
-		}
+		try {
+			ActivityFacilities facilities = scenarioData.getActivityFacilities();
+			if (facilities != null) {
+				new FacilitiesWriter(facilities).write(controlerIO.getOutputFilename("output_facilities.xml.gz"));
+			}
+		} catch ( Exception ee ) {}
 		if (((NetworkFactoryImpl) scenarioData.getNetwork().getFactory()).isTimeVariant()) {
 			new NetworkChangeEventsWriter().write(controlerIO.getOutputFilename("output_change_events.xml.gz"),
 					((NetworkImpl) scenarioData.getNetwork()).getNetworkChangeEvents());
 		}
-		if (this.scenarioData.getConfig().transit().isUseTransit()) {
-			new TransitScheduleWriter(this.scenarioData.getTransitSchedule()).writeFile(controlerIO.getOutputFilename("output_transitSchedule.xml.gz"));
-		}
-		if (this.scenarioData.getConfig().transit().isUseTransit()) {
-			new VehicleWriterV1(this.scenarioData.getTransitVehicles()).writeFile(controlerIO.getOutputFilename("output_transitVehicles.xml.gz"));
-		}
-		if (this.scenarioData.getConfig().vehicles().getVehiclesFile() != null ) {
-			new VehicleWriterV1(this.scenarioData.getVehicles()).writeFile(controlerIO.getOutputFilename("output_vehicles.xml.gz"));
-		}
-		if (this.scenarioData.getConfig().scenario().isUseHouseholds()) {
-			new HouseholdsWriterV10(scenarioData.getHouseholds()).writeFile(controlerIO.getOutputFilename(Controler.FILENAME_HOUSEHOLDS));
-		}
-		if (this.scenarioData.getConfig().scenario().isUseLanes()) {
-			new LaneDefinitionsWriter20(
-					scenarioData.getLanes()).write(
-							controlerIO.getOutputFilename(Controler.FILENAME_LANES));
-		}
+		try {			
+			final TransitSchedule transitSchedule = this.scenarioData.getTransitSchedule();
+			if ( transitSchedule != null ) {
+				new TransitScheduleWriter(transitSchedule).writeFile(controlerIO.getOutputFilename("output_transitSchedule.xml.gz"));
+			}
+		} catch ( Exception ee ) { }
+		try {
+			final Vehicles transitVehicles = this.scenarioData.getTransitVehicles();
+			if ( transitVehicles != null ) {
+				new VehicleWriterV1(transitVehicles).writeFile(controlerIO.getOutputFilename("output_transitVehicles.xml.gz"));
+			}
+		} catch ( Exception ee ) {} 
+		try {
+			final Vehicles vehicles = this.scenarioData.getVehicles();
+			if ( vehicles != null ) {
+				new VehicleWriterV1(vehicles).writeFile(controlerIO.getOutputFilename("output_vehicles.xml.gz"));
+			}
+		} catch ( Exception ee ) {} 
+		try {
+			final Households households = scenarioData.getHouseholds();
+			if ( households != null ) {
+				new HouseholdsWriterV10(households).writeFile(controlerIO.getOutputFilename(Controler.FILENAME_HOUSEHOLDS));
+			}
+		} catch ( Exception ee ) {}
+		try {
+			final LaneDefinitions20 lanes = scenarioData.getLanes();
+			if ( lanes != null ) { 
+				new LaneDefinitionsWriter20(lanes).write(controlerIO.getOutputFilename(Controler.FILENAME_LANES));
+			}
+		} catch ( Exception ee ) {}
 		if (!event.isUnexpected() && scenarioData.getConfig().vspExperimental().isWritingOutputEvents()) {
 			try {
 				File toFile = new File(	controlerIO.getOutputFilename("output_events.xml.gz"));
diff --git a/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java b/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
index 96f74f4..507de16 100644
--- a/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
+++ b/matsim/src/main/java/org/matsim/core/scenario/ScenarioImpl.java
@@ -73,7 +73,7 @@ public final class ScenarioImpl implements Scenario {
 		this.network = NetworkImpl.createNetwork();
 		this.population = PopulationUtils.createPopulation(this.config, this.network);
 		this.facilities = new ActivityFacilitiesImpl();
-		if (this.config.scenario().isUseHouseholds()){
+		if (this.config.households().getInputFile()!=null ){
 			this.createHouseholdsContainer();
 		}
 		if (this.config.scenario().isUseLanes()) {
@@ -118,11 +118,6 @@ public final class ScenarioImpl implements Scenario {
 	 */
 	public final boolean createHouseholdsContainer(){
 		if ( this.households != null ) return false;
-
-		if ( !this.config.scenario().isUseHouseholds() ) {
-			log.info( "creating households container while switch in config set to false. File will not be loaded automatically." );
-		}
-
 		this.households = new HouseholdsImpl();
 		return true;
 	}
@@ -198,7 +193,7 @@ public final class ScenarioImpl implements Scenario {
 	public final Households getHouseholds() {
 		// yy should throw an exception if null. kai, based on https://matsim.atlassian.net/browse/MATSIM-301 , may'15
 		if ( this.households == null ) {
-			if ( this.config.scenario().isUseHouseholds() ) {
+			if ( this.config.households().getInputFile()!=null ) {
 				this.createHouseholdsContainer();
 			}
 			else {
diff --git a/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java b/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
index be761cf..f939316 100644
--- a/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
+++ b/matsim/src/main/java/org/matsim/core/scenario/ScenarioLoaderImpl.java
@@ -135,11 +135,9 @@ public class ScenarioLoaderImpl {
 		this.loadNetwork();
 		this.loadActivityFacilities();
 		this.loadPopulation();
-		if (this.config.scenario().isUseHouseholds()) {
-			this.loadHouseholds();
-		}
-		this.loadTransit();
-		this.loadTransitVehicles();
+		this.loadHouseholds();
+		this.loadTransit(); // tests internally if the file is there
+		this.loadTransitVehicles(); // tests internally if the file is there
 		if (this.config.vehicles().getVehiclesFile()!=null ) {
 			this.loadVehicles() ;
 		}
@@ -233,16 +231,22 @@ public class ScenarioLoaderImpl {
 	}
 
 	private void loadHouseholds() {
-		if ((this.scenario.getHouseholds() != null) && (this.config.households() != null) && (this.config.households().getInputFile() != null) ) {
-			String hhFileName = this.config.households().getInputFile();
-			log.info("loading households from " + hhFileName);
-			new HouseholdsReaderV10(this.scenario.getHouseholds()).parse(hhFileName);
+		final String householdsFile = this.config.households().getInputFile();
+		if ( (this.config.households() != null) && (householdsFile != null) ) {
+			this.scenario.createHouseholdsContainer() ;
+			log.info("loading households from " + householdsFile);
+			new HouseholdsReaderV10(this.scenario.getHouseholds()).parse(householdsFile);
 			log.info("households loaded.");
 		}
 		else {
-			log.info("no households file set in config or feature disabled, not able to load anything");
+			log.info("no households file set in config, not loading households");
 		}
 		if ((this.config.households() != null) && (this.config.households().getInputHouseholdAttributesFile() != null)) {
+
+			this.scenario.createHouseholdsContainer() ;
+			// (there was a test that implied that loading hh attributes without ever loading hhs themselves would be a valid operation. 
+			// The hh container was originally instantiated by the useHouseholds switch, but that is gone now. kai, jul'15)
+			
 			String householdAttributesFileName = this.config.households().getInputHouseholdAttributesFile();
 			log.info("loading household attributes from " + householdAttributesFileName);
 			new ObjectAttributesXmlReader(this.scenario.getHouseholds().getHouseholdAttributes()).parse(householdAttributesFileName);
@@ -262,11 +266,13 @@ public class ScenarioLoaderImpl {
 			log.info("no transit schedule file set in config, not loading any transit schedule");
 		}
 		if ( this.config.transit().getTransitLinesAttributesFile() != null ) {
+			this.scenario.createTransitScheduleContainer() ;
 			String transitLinesAttributesFileName = this.config.transit().getTransitLinesAttributesFile();
 			log.info("loading transit lines attributes from " + transitLinesAttributesFileName);
 			new ObjectAttributesXmlReader(this.scenario.getTransitSchedule().getTransitLinesAttributes()).parse(transitLinesAttributesFileName);
 		}
 		if ( this.config.transit().getTransitStopsAttributesFile() != null ) {
+			this.scenario.createTransitScheduleContainer() ;
 			String transitStopsAttributesFileName = this.config.transit().getTransitStopsAttributesFile();
 			log.info("loading transit stop facilities attributes from " + transitStopsAttributesFileName);
 			new ObjectAttributesXmlReader(this.scenario.getTransitSchedule().getTransitStopsAttributes()).parse(transitStopsAttributesFileName);
diff --git a/matsim/src/test/java/org/matsim/core/scenario/ScenarioLoaderImplTest.java b/matsim/src/test/java/org/matsim/core/scenario/ScenarioLoaderImplTest.java
index e40dfe9..9a087ca 100644
--- a/matsim/src/test/java/org/matsim/core/scenario/ScenarioLoaderImplTest.java
+++ b/matsim/src/test/java/org/matsim/core/scenario/ScenarioLoaderImplTest.java
@@ -37,19 +37,21 @@ public class ScenarioLoaderImplTest {
 
 	@Test
 	public void testLoadScenario_loadTransitData() {
+		// test the create/load sequence:
 		{
-//			Scenario scenario = ScenarioUtils.createScenario(this.util.loadConfig(this.util.getClassInputDirectory() + "transitConfig.xml"));
-		ScenarioBuilder builder = new ScenarioBuilder( this.util.loadConfig(this.util.getClassInputDirectory() + "transitConfig.xml") ) ;
-		builder.createTransitSchedule() ;
-		// facilities is there by default????
-		Scenario scenario = builder.createScenario() ;
-		Assert.assertEquals(0, scenario.getTransitSchedule().getTransitLines().size());
-		Assert.assertEquals(0, scenario.getTransitSchedule().getFacilities().size());
-		ScenarioUtils.loadScenario(scenario);
-		Assert.assertEquals(1, scenario.getTransitSchedule().getTransitLines().size());
-		Assert.assertEquals(2, scenario.getTransitSchedule().getFacilities().size());
+			//			Scenario scenario = ScenarioUtils.createScenario(this.util.loadConfig(this.util.getClassInputDirectory() + "transitConfig.xml"));
+			ScenarioBuilder builder = new ScenarioBuilder( this.util.loadConfig(this.util.getClassInputDirectory() + "transitConfig.xml") ) ;
+			builder.createTransitSchedule() ;
+			// facilities is there by default????
+			Scenario scenario = builder.createScenario() ;
+			Assert.assertEquals(0, scenario.getTransitSchedule().getTransitLines().size());
+			Assert.assertEquals(0, scenario.getTransitSchedule().getFacilities().size());
+			ScenarioUtils.loadScenario(scenario);
+			Assert.assertEquals(1, scenario.getTransitSchedule().getTransitLines().size());
+			Assert.assertEquals(2, scenario.getTransitSchedule().getFacilities().size());
 		}
-		//----
+
+		// load directly:
 		{
 			Scenario scenario = ScenarioUtils.loadScenario(this.util.loadConfig(this.util.getClassInputDirectory() + "transitConfig.xml"));
 			Assert.assertEquals(1, scenario.getTransitSchedule().getTransitLines().size());
@@ -92,7 +94,7 @@ public class ScenarioLoaderImplTest {
 	@Test
 	public void testLoadScenario_loadHouseholdAttributes() {
 		Config config = this.util.loadConfig(this.util.getClassInputDirectory() + "householdAttributesConfig.xml");
-		config.scenario().setUseHouseholds(true);
+//		config.scenario().setUseHouseholds(true);
 		config.households().addParam("inputHouseholdAttributesFile", this.util.getClassInputDirectory() + "householdAttributes.xml");
 		Scenario scenario = ScenarioUtils.loadScenario(config);
 		Assert.assertEquals("world", scenario.getHouseholds().getHouseholdAttributes().getAttribute("1", "hello"));
diff --git a/playgrounds/sergioo/src/main/java/playground/sergioo/passivePlanning2012/run/ControlerListenerSocial.java b/playgrounds/sergioo/src/main/java/playground/sergioo/passivePlanning2012/run/ControlerListenerSocial.java
index 903f836..0043af4 100644
--- a/playgrounds/sergioo/src/main/java/playground/sergioo/passivePlanning2012/run/ControlerListenerSocial.java
+++ b/playgrounds/sergioo/src/main/java/playground/sergioo/passivePlanning2012/run/ControlerListenerSocial.java
@@ -104,7 +104,7 @@ public class ControlerListenerSocial implements StartupListener, IterationStarts
 	@Override
 	public void notifyIterationStarts(final IterationStartsEvent event) {
 		if(event.getIteration() == 0)
-			if(event.getControler().getConfig().scenario().isUseHouseholds()) {
+			if(event.getControler().getConfig().households().getInputFile()!=null) {
 				final PassivePlannerManager passivePlannerManager = new PassivePlannerManager(1);
 				event.getControler().addControlerListener(passivePlannerManager);
 				event.getControler().addOverridingModule(new AbstractModule() {
diff --git a/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java b/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
index 320f9a4..d61bf88 100644
--- a/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/sergioo/src/main/java/playground/sergioo/typesPopulation2013/scenario/ScenarioLoaderImpl.java
@@ -136,7 +136,7 @@ public class ScenarioLoaderImpl {
 		this.loadNetwork();
 		this.loadActivityFacilities();
 		this.loadPopulation();
-		if (this.config.scenario().isUseHouseholds()) {
+		if (this.config.households().getInputFile()!=null) {
 			this.loadHouseholds();
 		}
 		if (this.config.transit().isUseTransit()) {
diff --git a/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java b/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
index 531e9f2..53e5bf2 100644
--- a/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/sergioo/src/main/java/playground/sergioo/weeklySimulation/scenario/ScenarioLoaderImpl.java
@@ -141,7 +141,7 @@ public class ScenarioLoaderImpl {
 		this.loadNetwork();
 		this.loadActivityFacilities();
 		this.loadPopulation();
-		if (this.config.scenario().isUseHouseholds()) {
+		if (this.config.households().getInputFile()!=null) {
 			this.loadHouseholds();
 		}
 		if (this.config.transit().isUseTransit()) {
diff --git a/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java b/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
index 97fc284..88c61b7 100644
--- a/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
+++ b/playgrounds/singapore/src/main/java/playground/singapore/typesPopulation/scenario/ScenarioLoaderImpl.java
@@ -139,7 +139,7 @@ public class ScenarioLoaderImpl {
 		this.loadNetwork();
 		this.loadActivityFacilities();
 		this.loadPopulation();
-		if (this.config.scenario().isUseHouseholds()) {
+		if (this.config.households().getInputFile()!=null) {
 			this.loadHouseholds();
 		}
 		if (this.config.transit().isUseTransit()) {
-- 
2.3.2 (Apple Git-55)

